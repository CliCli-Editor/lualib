--This file is generated by tools/genGameAPI, do not modify it manually.
---@meta

---@class py.GameAPI
GameAPI = {}

--Sets the global trigger JOINT array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.Joint # value
function GameAPI.set_trigger_list_actor_variable_joint(actor, key, index, value) end

--Sets the global trigger JOINT non-array variable
---@param key string # Variable name
---@param value? py.Joint # value
function GameAPI.set_trigger_variable_joint(key, value) end

--Sets the global trigger JOINT non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.Joint # value
function GameAPI.set_trigger_actor_variable_joint(actor, key, value) end

--Sets the global trigger REACTION array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.Reaction # value
function GameAPI.set_trigger_list_variable_reaction(key, index, value) end

--Sets the global trigger REACTION array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.Reaction # value
function GameAPI.set_trigger_list_actor_variable_reaction(actor, key, index, value) end

--Sets the global trigger REACTION non-array variable
---@param key string # Variable name
---@param value? py.Reaction # value
function GameAPI.set_trigger_variable_reaction(key, value) end

--Sets the global trigger REACTION non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.Reaction # value
function GameAPI.set_trigger_actor_variable_reaction(actor, key, value) end

--Set the global trigger to REACTION_GROUP array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.ReactionGroup # value
function GameAPI.set_trigger_list_variable_reaction_group(key, index, value) end

--Set the global trigger to REACTION_GROUP array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.ReactionGroup # value
function GameAPI.set_trigger_list_actor_variable_reaction_group(actor, key, index, value) end

--Set the global trigger to REACTION_GROUP a non-array variable
---@param key string # Variable name
---@param value? py.ReactionGroup # value
function GameAPI.set_trigger_variable_reaction_group(key, value) end

--Set the global trigger to REACTION_GROUP a non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.ReactionGroup # value
function GameAPI.set_trigger_actor_variable_reaction_group(actor, key, value) end

--Set the global trigger PHYSICS_FILTER array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.PhysicsFilter # value
function GameAPI.set_trigger_list_variable_physics_filter(key, index, value) end

--Set the global trigger PHYSICS_FILTER array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.PhysicsFilter # value
function GameAPI.set_trigger_list_actor_variable_physics_filter(actor, key, index, value) end

--Set the global trigger PHYSICS_FILTER non-array variable
---@param key string # Variable name
---@param value? py.PhysicsFilter # value
function GameAPI.set_trigger_variable_physics_filter(key, value) end

--Set the global trigger PHYSICS_FILTER non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.PhysicsFilter # value
function GameAPI.set_trigger_actor_variable_physics_filter(actor, key, value) end

--Sets the global trigger INT_SAVE array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? integer # value
function GameAPI.set_trigger_list_variable_int_save(key, index, value) end

--Sets the global trigger INT_SAVE array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? integer # value
function GameAPI.set_trigger_list_actor_variable_int_save(actor, key, index, value) end

--Sets the global trigger INT_SAVE non-array variable
---@param key string # Variable name
---@param value? integer # value
function GameAPI.set_trigger_variable_int_save(key, value) end

--Sets the global trigger INT_SAVE non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? integer # value
function GameAPI.set_trigger_actor_variable_int_save(actor, key, value) end

--Sets the global trigger STR_SAVE array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? string # value
function GameAPI.set_trigger_list_variable_str_save(key, index, value) end

--Sets the global trigger STR_SAVE array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? string # value
function GameAPI.set_trigger_list_actor_variable_str_save(actor, key, index, value) end

--Sets the global trigger STR_SAVE non-array variable
---@param key string # Variable name
---@param value? string # value
function GameAPI.set_trigger_variable_str_save(key, value) end

--Sets the global trigger STR_SAVE non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? string # value
function GameAPI.set_trigger_actor_variable_str_save(actor, key, value) end

--Sets the global trigger FLOAT_SAVE array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.Fixed # value
function GameAPI.set_trigger_list_variable_float_save(key, index, value) end

--Sets the global trigger FLOAT_SAVE array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.Fixed # value
function GameAPI.set_trigger_list_actor_variable_float_save(actor, key, index, value) end

--Sets the global trigger FLOAT_SAVE non-array variable
---@param key string # Variable name
---@param value? py.Fixed # value
function GameAPI.set_trigger_variable_float_save(key, value) end

--Sets the global trigger FLOAT_SAVE non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.Fixed # value
function GameAPI.set_trigger_actor_variable_float_save(actor, key, value) end

--Sets the global trigger BOOL_SAVE array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? boolean # value
function GameAPI.set_trigger_list_variable_bool_save(key, index, value) end

--Sets the global trigger BOOL_SAVE array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? boolean # value
function GameAPI.set_trigger_list_actor_variable_bool_save(actor, key, index, value) end

--Sets the global trigger BOOL_SAVE non-array variable
---@param key string # Variable name
---@param value? boolean # value
function GameAPI.set_trigger_variable_bool_save(key, value) end

--Sets the global trigger BOOL_SAVE non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? boolean # value
function GameAPI.set_trigger_actor_variable_bool_save(actor, key, value) end

--Sets the global trigger TABLE_SAVE array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.Table # value
function GameAPI.set_trigger_list_variable_table_save(key, index, value) end

--Sets the global trigger TABLE_SAVE array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.Table # value
function GameAPI.set_trigger_list_actor_variable_table_save(actor, key, index, value) end

--Sets the global trigger TABLE_SAVE non-array variable
---@param key string # Variable name
---@param value? py.Table # value
function GameAPI.set_trigger_variable_table_save(key, value) end

--Sets the global trigger TABLE_SAVE non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.Table # value
function GameAPI.set_trigger_actor_variable_table_save(actor, key, value) end

--Example Set the GLOBAL_ARCHIVE_SLOT array variable subentry of the global trigger
---@param key string # Variable name
---@param index integer # subscript
---@param value? string # value
function GameAPI.set_trigger_list_variable_global_archive_slot(key, index, value) end

--Example Set the GLOBAL_ARCHIVE_SLOT array variable subentry of the global trigger
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? string # value
function GameAPI.set_trigger_list_actor_variable_global_archive_slot(actor, key, index, value) end

--Set the GLOBAL_ARCHIVE_SLOT non-array variable of the global trigger
---@param key string # Variable name
---@param value? string # value
function GameAPI.set_trigger_variable_global_archive_slot(key, value) end

--Set the global trigger GLOBAL_ARCHIVE_SLOT non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? string # value
function GameAPI.set_trigger_actor_variable_global_archive_slot(actor, key, value) end

--Set the global trigger RANDOM_POOL_DROP array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? integer # value
function GameAPI.set_trigger_list_variable_random_pool_drop(key, index, value) end

--Set the global trigger RANDOM_POOL_DROP array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? integer # value
function GameAPI.set_trigger_list_actor_variable_random_pool_drop(actor, key, index, value) end

--Set the global trigger RANDOM_POOL_DROP non-array variable
---@param key string # Variable name
---@param value? integer # value
function GameAPI.set_trigger_variable_random_pool_drop(key, value) end

--Set the global trigger RANDOM_POOL_DROP non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? integer # value
function GameAPI.set_trigger_actor_variable_random_pool_drop(actor, key, value) end

--Sets the global trigger DYNAMIC_TRIGGER_INSTANCE array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.DynamicTriggerInstance # value
function GameAPI.set_trigger_list_variable_dynamic_trigger_instance(key, index, value) end

--Sets the global trigger DYNAMIC_TRIGGER_INSTANCE array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.DynamicTriggerInstance # value
function GameAPI.set_trigger_list_actor_variable_dynamic_trigger_instance(actor, key, index, value) end

--Sets the global trigger DYNAMIC_TRIGGER_INSTANCE non-array variable
---@param key string # Variable name
---@param value? py.DynamicTriggerInstance # value
function GameAPI.set_trigger_variable_dynamic_trigger_instance(key, value) end

--Sets the global trigger DYNAMIC_TRIGGER_INSTANCE non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.DynamicTriggerInstance # value
function GameAPI.set_trigger_actor_variable_dynamic_trigger_instance(actor, key, value) end

--Sets the global trigger TABLE array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.Table # value
function GameAPI.set_trigger_list_variable_table(key, index, value) end

--Sets the global trigger TABLE array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.Table # value
function GameAPI.set_trigger_list_actor_variable_table(actor, key, index, value) end

--Sets the global trigger TABLE non-array variable
---@param key string # Variable name
---@param value? py.Table # value
function GameAPI.set_trigger_variable_table(key, value) end

--Sets the global trigger TABLE non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.Table # value
function GameAPI.set_trigger_actor_variable_table(actor, key, value) end

--Set the global trigger RANDOM_POOL array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.RandomPool # value
function GameAPI.set_trigger_list_variable_random_pool(key, index, value) end

--Set the global trigger RANDOM_POOL array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.RandomPool # value
function GameAPI.set_trigger_list_actor_variable_random_pool(actor, key, index, value) end

--Set the global trigger RANDOM_POOL non-array variable
---@param key string # Variable name
---@param value? py.RandomPool # value
function GameAPI.set_trigger_variable_random_pool(key, value) end

--Set the global trigger RANDOM_POOL non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.RandomPool # value
function GameAPI.set_trigger_actor_variable_random_pool(actor, key, value) end

--Sets the global trigger SCENE_UI array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.SceneNode # value
function GameAPI.set_trigger_list_variable_scene_ui(key, index, value) end

--Sets the global trigger SCENE_UI array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.SceneNode # value
function GameAPI.set_trigger_list_actor_variable_scene_ui(actor, key, index, value) end

--Sets the global trigger SCENE_UI non-array variable
---@param key string # Variable name
---@param value? py.SceneNode # value
function GameAPI.set_trigger_variable_scene_ui(key, value) end

--Sets the global trigger SCENE_UI non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.SceneNode # value
function GameAPI.set_trigger_actor_variable_scene_ui(actor, key, value) end

--Sets the global trigger DAMAGE_TYPE array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? integer # value
function GameAPI.set_trigger_list_variable_damage_type(key, index, value) end

--Sets the global trigger DAMAGE_TYPE array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? integer # value
function GameAPI.set_trigger_list_actor_variable_damage_type(actor, key, index, value) end

--Sets the global trigger DAMAGE_TYPE non-array variable
---@param key string # Variable name
---@param value? integer # value
function GameAPI.set_trigger_variable_damage_type(key, value) end

--Sets the global trigger DAMAGE_TYPE non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? integer # value
function GameAPI.set_trigger_actor_variable_damage_type(actor, key, value) end

--Sets the global trigger NEW_TIMER array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.Timer # value
function GameAPI.set_trigger_list_variable_new_timer(key, index, value) end

--Sets the global trigger NEW_TIMER array variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.Timer # value
function GameAPI.set_trigger_list_actor_variable_new_timer(actor, key, index, value) end

--Sets the global trigger NEW_TIMER non-array variable
---@param key string # Variable name
---@param value? py.Timer # value
function GameAPI.set_trigger_variable_new_timer(key, value) end

--Sets the global trigger NEW_TIMER non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.Timer # value
function GameAPI.set_trigger_actor_variable_new_timer(actor, key, value) end

--Sets the global trigger TECH_KEY array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.TechKey # value
function GameAPI.set_trigger_list_variable_tech_key(key, index, value) end

--Sets the global trigger TECH_KEY array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.TechKey # value
function GameAPI.set_trigger_list_actor_variable_tech_key(actor, key, index, value) end

--Sets the global trigger TECH_KEY non-array variable
---@param key string # Variable name
---@param value? py.TechKey # value
function GameAPI.set_trigger_variable_tech_key(key, value) end

--Sets the global trigger TECH_KEY non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.TechKey # value
function GameAPI.set_trigger_actor_variable_tech_key(actor, key, value) end

--Sets the global trigger STORE_KEY array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.StoreKey # value
function GameAPI.set_trigger_list_variable_store_key(key, index, value) end

--Sets the global trigger STORE_KEY array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.StoreKey # value
function GameAPI.set_trigger_list_actor_variable_store_key(actor, key, index, value) end

--Sets the global trigger STORE_KEY non-array variable
---@param key string # Variable name
---@param value? py.StoreKey # value
function GameAPI.set_trigger_variable_store_key(key, value) end

--Sets the global trigger STORE_KEY non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.StoreKey # value
function GameAPI.set_trigger_actor_variable_store_key(actor, key, value) end

--Set the global trigger KEYBOARD_KEY array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.KeyboardKey # value
function GameAPI.set_trigger_list_variable_keyboard_key(key, index, value) end

--Set the global trigger KEYBOARD_KEY array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.KeyboardKey # value
function GameAPI.set_trigger_list_actor_variable_keyboard_key(actor, key, index, value) end

--Set the global trigger KEYBOARD_KEY non-array variable
---@param key string # Variable name
---@param value? py.KeyboardKey # value
function GameAPI.set_trigger_variable_keyboard_key(key, value) end

--Set the global trigger KEYBOARD_KEY non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.KeyboardKey # value
function GameAPI.set_trigger_actor_variable_keyboard_key(actor, key, value) end

--Sets the global trigger UNIT_TYPE array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.UnitType # value
function GameAPI.set_trigger_list_variable_unit_type(key, index, value) end

--Sets the global trigger UNIT_TYPE array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.UnitType # value
function GameAPI.set_trigger_list_actor_variable_unit_type(actor, key, index, value) end

--Sets global trigger UNIT_TYPE non-array variable
---@param key string # Variable name
---@param value? py.UnitType # value
function GameAPI.set_trigger_variable_unit_type(key, value) end

--Sets the global trigger UNIT_TYPE non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.UnitType # value
function GameAPI.set_trigger_actor_variable_unit_type(actor, key, value) end

--Sets the global trigger CURVED_PATH array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.CurvedPath # value
function GameAPI.set_trigger_list_variable_curved_path(key, index, value) end

--Sets the global trigger CURVED_PATH array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.CurvedPath # value
function GameAPI.set_trigger_list_actor_variable_curved_path(actor, key, index, value) end

--Sets the global trigger CURVED_PATH non-array variable
---@param key string # Variable name
---@param value? py.CurvedPath # value
function GameAPI.set_trigger_variable_curved_path(key, value) end

--Sets the global trigger CURVED_PATH non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.CurvedPath # value
function GameAPI.set_trigger_actor_variable_curved_path(actor, key, value) end

--Sets the global trigger CURVED_PATH_3D array variable subentry
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.CurvedPath3D # value
function GameAPI.set_trigger_list_variable_curved_path_3d(key, index, value) end

--Sets the global trigger CURVED_PATH_3D array group variable subentry
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param index integer # subscript
---@param value? py.CurvedPath3D # value
function GameAPI.set_trigger_list_actor_variable_curved_path_3d(actor, key, index, value) end

--Sets the global trigger CURVED_PATH_3D non-array variable
---@param key string # Variable name
---@param value? py.CurvedPath3D # value
function GameAPI.set_trigger_variable_curved_path_3d(key, value) end

--Sets the global trigger CURVED_PATH_3D non-array group variable
---@param actor py.Actor # Unit entity
---@param key string # Variable name
---@param value? py.CurvedPath3D # value
function GameAPI.set_trigger_actor_variable_curved_path_3d(actor, key, value) end

--Gets an item in an array (specified type)
---@param l py.List # list
---@param i integer # subscript
---@param var_type string # type
---@return py.Actor # value
function GameAPI.get_list_value_by_type(l, i, var_type) end

--Sets an item in an array (specified type)
---@param l py.List # list
---@param i integer # subscript
---@param v py.Actor # value
---@param var_type string # type
function GameAPI.set_list_value_by_type(l, i, v, var_type) end

--Gets an item in the FLOAT array
---@param l py.List # list
---@param i integer # subscript
---@return py.Fixed # value
function GameAPI.get_float_list_value(l, i) end

--Sets an item in the FLOAT array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Fixed # value
function GameAPI.set_float_list_value(l, i, v) end

--Generates a FLOAT array of n values v
---@param n integer # Length
---@param v? py.Fixed # value
---@return py.List # list
function GameAPI.get_float_n_list(n, v) end

--Gets an item in a BOOLEAN array
---@param l py.List # list
---@param i integer # subscript
---@return boolean # value
function GameAPI.get_boolean_list_value(l, i) end

--Sets an item in a BOOLEAN array
---@param l py.List # list
---@param i integer # subscript
---@param v boolean # value
function GameAPI.set_boolean_list_value(l, i, v) end

--Generates a BOOLEAN array of n values v
---@param n integer # Length
---@param v? boolean # value
---@return py.List # list
function GameAPI.get_boolean_n_list(n, v) end

--Gets an item in the INTEGER array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_integer_list_value(l, i) end

--Sets an item in the INTEGER array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_integer_list_value(l, i, v) end

--Generates an INTEGER array of n values v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_integer_n_list(n, v) end

--Gets an item in a STRING array
---@param l py.List # list
---@param i integer # subscript
---@return string # value
function GameAPI.get_string_list_value(l, i) end

--Sets an item in the STRING array
---@param l py.List # list
---@param i integer # subscript
---@param v string # value
function GameAPI.set_string_list_value(l, i, v) end

--Generates an array of n strings with the value v
---@param n integer # Length
---@param v? string # value
---@return py.List # list
function GameAPI.get_string_n_list(n, v) end

--Gets an item in the POINT array
---@param l py.List # list
---@param i integer # subscript
---@return py.FPoint # value
function GameAPI.get_point_list_value(l, i) end

--Sets an item in the POINT array
---@param l py.List # list
---@param i integer # subscript
---@param v py.FPoint # value
function GameAPI.set_point_list_value(l, i, v) end

--Generates an array of n points with the value v
---@param n integer # Length
---@param v? py.FPoint # value
---@return py.List # list
function GameAPI.get_point_n_list(n, v) end

--Gets an item in the UNIT_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@return py.Unit # value
function GameAPI.get_unit_entity_list_value(l, i) end

--Set an item in the UNIT_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Unit # value
function GameAPI.set_unit_entity_list_value(l, i, v) end

--Generate n UNIT_ENTITY arrays with the value v
---@param n integer # Length
---@param v? py.Unit # value
---@return py.List # list
function GameAPI.get_unit_entity_n_list(n, v) end

--Gets an item in the RECTANGLE array
---@param l py.List # list
---@param i integer # subscript
---@return py.RecArea # value
function GameAPI.get_rectangle_list_value(l, i) end

--Sets an item in the RECTANGLE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.RecArea # value
function GameAPI.set_rectangle_list_value(l, i, v) end

--Generates n RECTANGLE arrays with the value v
---@param n integer # Length
---@param v? py.RecArea # value
---@return py.List # list
function GameAPI.get_rectangle_n_list(n, v) end

--Gets an item in the UNIT_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@return py.UnitType # value
function GameAPI.get_unit_type_list_value(l, i) end

--Sets an item in the UNIT_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.UnitType # value
function GameAPI.set_unit_type_list_value(l, i, v) end

--Generates n UNIT_TYPE arrays with the value v
---@param n integer # Length
---@param v? py.UnitType # value
---@return py.List # list
function GameAPI.get_unit_type_n_list(n, v) end

--Gets an item in the TABLE array
---@param l py.List # list
---@param i integer # subscript
---@return py.Table # value
function GameAPI.get_table_list_value(l, i) end

--Sets an item in the TABLE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Table # value
function GameAPI.set_table_list_value(l, i, v) end

--Generates a TABLE array of n values v
---@param n integer # Length
---@param v? py.Table # value
---@return py.List # list
function GameAPI.get_table_n_list(n, v) end

--Gets an item in the ABILITY array
---@param l py.List # list
---@param i integer # subscript
---@return py.Ability # value
function GameAPI.get_ability_list_value(l, i) end

--Sets an item in the ABILITY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Ability # value
function GameAPI.set_ability_list_value(l, i, v) end

--Generates an ABILITY array of n values v
---@param n integer # Length
---@param v? py.Ability # value
---@return py.List # list
function GameAPI.get_ability_n_list(n, v) end

--Gets an item in the TEAM array
---@param l py.List # list
---@param i integer # subscript
---@return py.Camp # value
function GameAPI.get_team_list_value(l, i) end

--Sets an item in the TEAM array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Camp # value
function GameAPI.set_team_list_value(l, i, v) end

--Generates a TEAM array of n values v
---@param n integer # Length
---@param v? py.Camp # value
---@return py.List # list
function GameAPI.get_team_n_list(n, v) end

--Gets an item in the ROUND_AREA array
---@param l py.List # list
---@param i integer # subscript
---@return py.CirArea # value
function GameAPI.get_round_area_list_value(l, i) end

--Sets an item in the ROUND_AREA array
---@param l py.List # list
---@param i integer # subscript
---@param v py.CirArea # value
function GameAPI.set_round_area_list_value(l, i, v) end

--Generates an array of n ROUND_AREA values of v
---@param n integer # Length
---@param v? py.CirArea # value
---@return py.List # list
function GameAPI.get_round_area_n_list(n, v) end

--Gets an item in the POINT_LIST array
---@param l py.List # list
---@param i integer # subscript
---@return py.Road # value
function GameAPI.get_point_list_list_value(l, i) end

--Sets an item in the POINT_LIST array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Road # value
function GameAPI.set_point_list_list_value(l, i, v) end

--Generates an array of n POINT_LIST values of v
---@param n integer # Length
---@param v? py.Road # value
---@return py.List # list
function GameAPI.get_point_list_n_list(n, v) end

--Gets an item in the PLAYER array
---@param l py.List # list
---@param i integer # subscript
---@return py.Role # value
function GameAPI.get_player_list_value(l, i) end

--Sets an item in the PLAYER array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Role # value
function GameAPI.set_player_list_value(l, i, v) end

--Generates n PLAYER arrays of value v
---@param n integer # Length
---@param v? py.Role # value
---@return py.List # list
function GameAPI.get_player_n_list(n, v) end

--Gets an item in the UNIT_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@return py.UnitGroup # value
function GameAPI.get_unit_group_list_value(l, i) end

--Sets an item in the UNIT_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@param v py.UnitGroup # value
function GameAPI.set_unit_group_list_value(l, i, v) end

--Generates n UNIT_GROUP arrays with the value v
---@param n integer # Length
---@param v? py.UnitGroup # value
---@return py.List # list
function GameAPI.get_unit_group_n_list(n, v) end

--Gets an item in the PLAYER_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@return py.RoleGroup # value
function GameAPI.get_player_group_list_value(l, i) end

--Sets an item in the PLAYER_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@param v py.RoleGroup # value
function GameAPI.set_player_group_list_value(l, i, v) end

--Generates n PLAYER_GROUP arrays with the value v
---@param n integer # Length
---@param v? py.RoleGroup # value
---@return py.List # list
function GameAPI.get_player_group_n_list(n, v) end

--Gets an item in the ITEM_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@return py.Item # value
function GameAPI.get_item_entity_list_value(l, i) end

--Sets an item in the ITEM_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Item # value
function GameAPI.set_item_entity_list_value(l, i, v) end

--Generates an ITEM_ENTITY array of n values v
---@param n integer # Length
---@param v? py.Item # value
---@return py.List # list
function GameAPI.get_item_entity_n_list(n, v) end

--Gets an item in the ITEM_NAME array
---@param l py.List # list
---@param i integer # subscript
---@return py.ItemKey # value
function GameAPI.get_item_name_list_value(l, i) end

--Sets an item in the ITEM_NAME array
---@param l py.List # list
---@param i integer # subscript
---@param v py.ItemKey # value
function GameAPI.set_item_name_list_value(l, i, v) end

--Generates an array of n ITEM_NAME values of v
---@param n integer # Length
---@param v? py.ItemKey # value
---@return py.List # list
function GameAPI.get_item_name_n_list(n, v) end

--Gets an item in the ROLE_RES_KEY array
---@param l py.List # list
---@param i integer # subscript
---@return py.RoleResKey # value
function GameAPI.get_role_res_key_list_value(l, i) end

--Set an item in the ROLE_RES_KEY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.RoleResKey # value
function GameAPI.set_role_res_key_list_value(l, i, v) end

--Generate n ROLE_RES_KEY arrays with the value v
---@param n integer # Length
---@param v? py.RoleResKey # value
---@return py.List # list
function GameAPI.get_role_res_key_n_list(n, v) end

--Gets an item in the UNIT_NAME_POOL array
---@param l py.List # list
---@param i integer # subscript
---@return py.UnitKeyPool # value
function GameAPI.get_unit_name_pool_list_value(l, i) end

--Set an item in the UNIT_NAME_POOL array
---@param l py.List # list
---@param i integer # subscript
---@param v py.UnitKeyPool # value
function GameAPI.set_unit_name_pool_list_value(l, i, v) end

--Generate n UNIT_NAME_POOL arrays with the value v
---@param n integer # Length
---@param v? py.UnitKeyPool # value
---@return py.List # list
function GameAPI.get_unit_name_pool_n_list(n, v) end

--Gets an item in the ABILITY_NAME array
---@param l py.List # list
---@param i integer # subscript
---@return py.AbilityKey # value
function GameAPI.get_ability_name_list_value(l, i) end

--Sets an item in the ABILITY_NAME array
---@param l py.List # list
---@param i integer # subscript
---@param v py.AbilityKey # value
function GameAPI.set_ability_name_list_value(l, i, v) end

--Generates an array of n ABILITY_NAME values of v
---@param n integer # Length
---@param v? py.AbilityKey # value
---@return py.List # list
function GameAPI.get_ability_name_n_list(n, v) end

--Gets an item in the UNIT_WRITE_ATTRIBUTE array
---@param l py.List # list
---@param i integer # subscript
---@return string # value
function GameAPI.get_unit_write_attribute_list_value(l, i) end

--Sets an item in the UNIT_WRITE_ATTRIBUTE array
---@param l py.List # list
---@param i integer # subscript
---@param v string # value
function GameAPI.set_unit_write_attribute_list_value(l, i, v) end

--Generates n UNIT_WRITE_ATTRIBUTE arrays with the value v
---@param n integer # Length
---@param v? string # value
---@return py.List # list
function GameAPI.get_unit_write_attribute_n_list(n, v) end

--Gets an item in the MODIFIER array
---@param l py.List # list
---@param i integer # subscript
---@return py.ModifierKey # value
function GameAPI.get_modifier_list_value(l, i) end

--Set MODIFIER for an item in the array
---@param l py.List # list
---@param i integer # subscript
---@param v py.ModifierKey # value
function GameAPI.set_modifier_list_value(l, i, v) end

--Generates n MODIFIER array with value v
---@param n integer # Length
---@param v? py.ModifierKey # value
---@return py.List # list
function GameAPI.get_modifier_n_list(n, v) end

--Gets an item in the PROJECTILE array
---@param l py.List # list
---@param i integer # subscript
---@return py.ProjectileKey # value
function GameAPI.get_projectile_list_value(l, i) end

--Sets an item in the PROJECTILE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.ProjectileKey # value
function GameAPI.set_projectile_list_value(l, i, v) end

--Generates an PROJECTILE array of n values v
---@param n integer # Length
---@param v? py.ProjectileKey # value
---@return py.List # list
function GameAPI.get_projectile_n_list(n, v) end

--Gets an item in the DAMAGE_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_damage_type_list_value(l, i) end

--Sets an item in the DAMAGE_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_damage_type_list_value(l, i, v) end

--Generates an array of n DAMAGE_TYPE values of v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_damage_type_n_list(n, v) end

--Gets an item in the SFX_KEY array
---@param l py.List # list
---@param i integer # subscript
---@return py.SfxKey # value
function GameAPI.get_sfx_key_list_value(l, i) end

--Sets an item in the SFX_KEY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.SfxKey # value
function GameAPI.set_sfx_key_list_value(l, i, v) end

--Generates an array of n SFX_KEY values of v
---@param n integer # Length
---@param v? py.SfxKey # value
---@return py.List # list
function GameAPI.get_sfx_key_n_list(n, v) end

--Gets an item in the UI_COMP array
---@param l py.List # list
---@param i integer # subscript
---@return string # value
function GameAPI.get_ui_comp_list_value(l, i) end

--Sets an item in the UI_COMP array
---@param l py.List # list
---@param i integer # subscript
---@param v string # value
function GameAPI.set_ui_comp_list_value(l, i, v) end

--Generates n UI_COMP arrays of value v
---@param n integer # Length
---@param v? string # value
---@return py.List # list
function GameAPI.get_ui_comp_n_list(n, v) end

--Gets an item in the UI_COMP_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_ui_comp_type_list_value(l, i) end

--Sets an item in the UI_COMP_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_ui_comp_type_list_value(l, i, v) end

--Generates n UI_COMP_TYPE arrays of value v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_ui_comp_type_n_list(n, v) end

--Gets an item in the UI_COMP_EVENT_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_ui_comp_event_type_list_value(l, i) end

--Sets an item in the UI_COMP_EVENT_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_ui_comp_event_type_list_value(l, i, v) end

--Generates n UI_COMP_EVENT_TYPE arrays of value v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_ui_comp_event_type_n_list(n, v) end

--Gets an item in the CAMERA array
---@param l py.List # list
---@param i integer # subscript
---@return py.Camera # value
function GameAPI.get_camera_list_value(l, i) end

--Sets an item in the CAMERA array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Camera # value
function GameAPI.set_camera_list_value(l, i, v) end

--Generates n CAMERA arrays with the value v
---@param n integer # Length
---@param v? py.Camera # value
---@return py.List # list
function GameAPI.get_camera_n_list(n, v) end

--Gets an item in the MODIFIER_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@return py.ModifierEntity # value
function GameAPI.get_modifier_entity_list_value(l, i) end

--Set an item in the MODIFIER_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.ModifierEntity # value
function GameAPI.set_modifier_entity_list_value(l, i, v) end

--Generate n MODIFIER_ENTITY array with value v
---@param n integer # Length
---@param v? py.ModifierEntity # value
---@return py.List # list
function GameAPI.get_modifier_entity_n_list(n, v) end

--Obtain an item in the PROJECTILE_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@return py.ProjectileEntity # value
function GameAPI.get_projectile_entity_list_value(l, i) end

--Set the PROJECTILE_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.ProjectileEntity # value
function GameAPI.set_projectile_entity_list_value(l, i, v) end

--Generate n PROJECTILE_ENTITY array with value v
---@param n integer # Length
---@param v? py.ProjectileEntity # value
---@return py.List # list
function GameAPI.get_projectile_entity_n_list(n, v) end

--Gets an item in the AUDIO_KEY array
---@param l py.List # list
---@param i integer # subscript
---@return py.AudioKey # value
function GameAPI.get_audio_key_list_value(l, i) end

--Sets an item in the AUDIO_KEY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.AudioKey # value
function GameAPI.set_audio_key_list_value(l, i, v) end

--Generates an AUDIO_KEY array of n values v
---@param n integer # Length
---@param v? py.AudioKey # value
---@return py.List # list
function GameAPI.get_audio_key_n_list(n, v) end

--Gets an entry in the TEXTURE array
---@param l py.List # list
---@param i integer # subscript
---@return py.Texture # value
function GameAPI.get_texture_list_value(l, i) end

--Set an item in the TEXTURE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Texture # value
function GameAPI.set_texture_list_value(l, i, v) end

--Generates n TEXTURE arrays with the value v
---@param n integer # Length
---@param v? py.Texture # value
---@return py.List # list
function GameAPI.get_texture_n_list(n, v) end

--Gets an item in the UNIT_NAME array
---@param l py.List # list
---@param i integer # subscript
---@return py.UnitKey # value
function GameAPI.get_unit_name_list_value(l, i) end

--Sets an item in the UNIT_NAME array
---@param l py.List # list
---@param i integer # subscript
---@param v py.UnitKey # value
function GameAPI.set_unit_name_list_value(l, i, v) end

--Generates n UNIT_NAME arrays with the value v
---@param n integer # Length
---@param v? py.UnitKey # value
---@return py.List # list
function GameAPI.get_unit_name_n_list(n, v) end

--Gets an item in the MODEL array
---@param l py.List # list
---@param i integer # subscript
---@return py.ModelKey # value
function GameAPI.get_model_list_value(l, i) end

--Sets an item in the MODEL array
---@param l py.List # list
---@param i integer # subscript
---@param v py.ModelKey # value
function GameAPI.set_model_list_value(l, i, v) end

--Generates an array of n models with the value v
---@param n integer # Length
---@param v? py.ModelKey # value
---@return py.List # list
function GameAPI.get_model_n_list(n, v) end

--Gets an item in the STORE_KEY array
---@param l py.List # list
---@param i integer # subscript
---@return py.StoreKey # value
function GameAPI.get_store_key_list_value(l, i) end

--Sets an item in the STORE_KEY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.StoreKey # value
function GameAPI.set_store_key_list_value(l, i, v) end

--Generates an array of n STORE_KEY values of v
---@param n integer # Length
---@param v? py.StoreKey # value
---@return py.List # list
function GameAPI.get_store_key_n_list(n, v) end

--Gets an item in the SFX_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@return py.Sfx # value
function GameAPI.get_sfx_entity_list_value(l, i) end

--Set an item in the SFX_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Sfx # value
function GameAPI.set_sfx_entity_list_value(l, i, v) end

--Generate n SFX_ENTITY arrays with the value v
---@param n integer # Length
---@param v? py.Sfx # value
---@return py.List # list
function GameAPI.get_sfx_entity_n_list(n, v) end

--Gets an item in the ROAD_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@return py.RoadGroup # value
function GameAPI.get_road_group_list_value(l, i) end

--Sets an item in the ROAD_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@param v py.RoadGroup # value
function GameAPI.set_road_group_list_value(l, i, v) end

--Generates an array of n ROAD_GROUP values of v
---@param n integer # Length
---@param v? py.RoadGroup # value
---@return py.List # list
function GameAPI.get_road_group_n_list(n, v) end

--Gets an item in the POLYGON array
---@param l py.List # list
---@param i integer # subscript
---@return py.PolyArea # value
function GameAPI.get_polygon_list_value(l, i) end

--Sets an item in the POLYGON array
---@param l py.List # list
---@param i integer # subscript
---@param v py.PolyArea # value
function GameAPI.set_polygon_list_value(l, i, v) end

--Generates a POLYGON array of n values v
---@param n integer # Length
---@param v? py.PolyArea # value
---@return py.List # list
function GameAPI.get_polygon_n_list(n, v) end

--Gets an item in the ITEM_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@return py.ItemGroup # value
function GameAPI.get_item_group_list_value(l, i) end

--Sets an item in the ITEM_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@param v py.ItemGroup # value
function GameAPI.set_item_group_list_value(l, i, v) end

--Generates an array of n ITEM_GROUP values of v
---@param n integer # Length
---@param v? py.ItemGroup # value
---@return py.List # list
function GameAPI.get_item_group_n_list(n, v) end

--Gets an item in the TECH_KEY array
---@param l py.List # list
---@param i integer # subscript
---@return py.TechKey # value
function GameAPI.get_tech_key_list_value(l, i) end

--Sets an item in the TECH_KEY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.TechKey # value
function GameAPI.set_tech_key_list_value(l, i, v) end

--Generates an array of n tech_keys with the value v
---@param n integer # Length
---@param v? py.TechKey # value
---@return py.List # list
function GameAPI.get_tech_key_n_list(n, v) end

--Gets an item in the DYNAMIC_TRIGGER_INSTANCE array
---@param l py.List # list
---@param i integer # subscript
---@return py.DynamicTriggerInstance # value
function GameAPI.get_dynamic_trigger_instance_list_value(l, i) end

--Sets an item in the DYNAMIC_TRIGGER_INSTANCE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.DynamicTriggerInstance # value
function GameAPI.set_dynamic_trigger_instance_list_value(l, i, v) end

--Generates n DYNAMIC_TRIGGER_INSTANCE arrays with value v
---@param n integer # Length
---@param v? py.DynamicTriggerInstance # value
---@return py.List # list
function GameAPI.get_dynamic_trigger_instance_n_list(n, v) end

--Gets an item in the ROLE_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@return py.RoleType # value
function GameAPI.get_role_type_list_value(l, i) end

--Sets an item in the ROLE_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.RoleType # value
function GameAPI.set_role_type_list_value(l, i, v) end

--Generates n ROLE_TYPE arrays with value v
---@param n integer # Length
---@param v? py.RoleType # value
---@return py.List # list
function GameAPI.get_role_type_n_list(n, v) end

--Gets an item in the ROLE_STATUS array
---@param l py.List # list
---@param i integer # subscript
---@return py.RoleStatus # value
function GameAPI.get_role_status_list_value(l, i) end

--Set an item in the ROLE_STATUS array
---@param l py.List # list
---@param i integer # subscript
---@param v py.RoleStatus # value
function GameAPI.set_role_status_list_value(l, i, v) end

--Generate n ROLE_STATUS arrays of value v
---@param n integer # Length
---@param v? py.RoleStatus # value
---@return py.List # list
function GameAPI.get_role_status_n_list(n, v) end

--Gets an item in the NEW_TIMER array
---@param l py.List # list
---@param i integer # subscript
---@return py.Timer # value
function GameAPI.get_new_timer_list_value(l, i) end

--Sets an item in the NEW_TIMER array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Timer # value
function GameAPI.set_new_timer_list_value(l, i, v) end

--Generates a NEW_TIMER array of n values v
---@param n integer # Length
---@param v? py.Timer # value
---@return py.List # list
function GameAPI.get_new_timer_n_list(n, v) end

--Gets an item in the ABILITY_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_ability_type_list_value(l, i) end

--Sets an item in the ABILITY_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_ability_type_list_value(l, i, v) end

--Generates n ABILITY_TYPE arrays with value v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_ability_type_n_list(n, v) end

--Gets an item in the LINK_SFX_KEY array
---@param l py.List # list
---@param i integer # subscript
---@return py.LinkSfxKey # value
function GameAPI.get_link_sfx_key_list_value(l, i) end

--Sets an item in the LINK_SFX_KEY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.LinkSfxKey # value
function GameAPI.set_link_sfx_key_list_value(l, i, v) end

--Generates an array of n LINK_SFX_KEY values v
---@param n integer # Length
---@param v? py.LinkSfxKey # value
---@return py.List # list
function GameAPI.get_link_sfx_key_n_list(n, v) end

--Gets an item in the UI_COMP_ALIGN_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_ui_comp_align_type_list_value(l, i) end

--Sets an item in the UI_COMP_ALIGN_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_ui_comp_align_type_list_value(l, i, v) end

--Generates a UI_COMP_ALIGN_TYPE array of n values v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_ui_comp_align_type_n_list(n, v) end

--Gets an item in the UI_DIRECTION array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_ui_direction_list_value(l, i) end

--Sets an item in the UI_DIRECTION array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_ui_direction_list_value(l, i, v) end

--Generates n UI_DIRECTION arrays of value v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_ui_direction_n_list(n, v) end

--Gets an item in the RANDOM_POOL array
---@param l py.List # list
---@param i integer # subscript
---@return py.RandomPool # value
function GameAPI.get_random_pool_list_value(l, i) end

--Set an item in the RANDOM_POOL array
---@param l py.List # list
---@param i integer # subscript
---@param v py.RandomPool # value
function GameAPI.set_random_pool_list_value(l, i, v) end

--Generate an array of n RANDOM_POOL values of v
---@param n integer # Length
---@param v? py.RandomPool # value
---@return py.List # list
function GameAPI.get_random_pool_n_list(n, v) end

--Gets an item in the LINK_SFX_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@return py.LinkSfx # value
function GameAPI.get_link_sfx_entity_list_value(l, i) end

--Set an item in the LINK_SFX_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.LinkSfx # value
function GameAPI.set_link_sfx_entity_list_value(l, i, v) end

--Generate n LINK_SFX_ENTITY arrays with the value v
---@param n integer # Length
---@param v? py.LinkSfx # value
---@return py.List # list
function GameAPI.get_link_sfx_entity_n_list(n, v) end

--Obtain an item in the PROJECTILE_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@return py.ProjectileGroup # value
function GameAPI.get_projectile_group_list_value(l, i) end

--Set an item in the PROJECTILE_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@param v py.ProjectileGroup # value
function GameAPI.set_projectile_group_list_value(l, i, v) end

--Generate n PROJECTILE_GROUP arrays with value v
---@param n integer # Length
---@param v? py.ProjectileGroup # value
---@return py.List # list
function GameAPI.get_projectile_group_n_list(n, v) end

--Gets an item in the DESTRUCTIBLE_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@return py.Destructible # value
function GameAPI.get_destructible_entity_list_value(l, i) end

--Set an item in the DESTRUCTIBLE_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Destructible # value
function GameAPI.set_destructible_entity_list_value(l, i, v) end

--Generate n DESTRUCTIBLE_ENTITY arrays with the value v
---@param n integer # Length
---@param v? py.Destructible # value
---@return py.List # list
function GameAPI.get_destructible_entity_n_list(n, v) end

--Gets an item in the DESTRUCTIBLE_NAME array
---@param l py.List # list
---@param i integer # subscript
---@return py.DestructibleKey # value
function GameAPI.get_destructible_name_list_value(l, i) end

--Set an item in the DESTRUCTIBLE_NAME array
---@param l py.List # list
---@param i integer # subscript
---@param v py.DestructibleKey # value
function GameAPI.set_destructible_name_list_value(l, i, v) end

--Generates n DESTRUCTIBLE_NAME arrays with value v
---@param n integer # Length
---@param v? py.DestructibleKey # value
---@return py.List # list
function GameAPI.get_destructible_name_n_list(n, v) end

--Gets an item in the SOUND_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@return py.SoundEntity # value
function GameAPI.get_sound_entity_list_value(l, i) end

--Set an item in the SOUND_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.SoundEntity # value
function GameAPI.set_sound_entity_list_value(l, i, v) end

--Generates n SOUND_ENTITY arrays with the value v
---@param n integer # Length
---@param v? py.SoundEntity # value
---@return py.List # list
function GameAPI.get_sound_entity_n_list(n, v) end

--Gets an item in the ABILITY_CAST_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_ability_cast_type_list_value(l, i) end

--Sets an item in the ABILITY_CAST_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_ability_cast_type_list_value(l, i, v) end

--Generates n ABILITY_CAST_TYPE arrays with value v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_ability_cast_type_n_list(n, v) end

--Gets an entry in the CURVED_PATH array
---@param l py.List # list
---@param i integer # subscript
---@return py.CurvedPath # value
function GameAPI.get_curved_path_list_value(l, i) end

--Sets an item in the CURVED_PATH array
---@param l py.List # list
---@param i integer # subscript
---@param v py.CurvedPath # value
function GameAPI.set_curved_path_list_value(l, i, v) end

--Generates an array of n CURVED_PATH values of v
---@param n integer # Length
---@param v? py.CurvedPath # value
---@return py.List # list
function GameAPI.get_curved_path_n_list(n, v) end

--Gets an item in the IMAGE_KEY array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_image_key_list_value(l, i) end

--Sets an item in the IMAGE_KEY array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_image_key_list_value(l, i, v) end

--Generates an array of n IMAGE_KEY values of v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_image_key_n_list(n, v) end

--Gets an item in the ANGLE array
---@param l py.List # list
---@param i integer # subscript
---@return py.Fixed # value
function GameAPI.get_angle_list_value(l, i) end

--Sets an item in the ANGLE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Fixed # value
function GameAPI.set_angle_list_value(l, i, v) end

--Generates an array of n angles with the value v
---@param n integer # Length
---@param v? py.Fixed # value
---@return py.List # list
function GameAPI.get_angle_n_list(n, v) end

--Gets an item in the CURVED_PATH_3D array
---@param l py.List # list
---@param i integer # subscript
---@return py.CurvedPath3D # value
function GameAPI.get_curved_path_3d_list_value(l, i) end

--Sets an item in the CURVED_PATH_3D array
---@param l py.List # list
---@param i integer # subscript
---@param v py.CurvedPath3D # value
function GameAPI.set_curved_path_3d_list_value(l, i, v) end

--Generates a CURVED_PATH_3D array of n values v
---@param n integer # Length
---@param v? py.CurvedPath3D # value
---@return py.List # list
function GameAPI.get_curved_path_3d_n_list(n, v) end

--Gets an item in the INT_SAVE array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_int_save_list_value(l, i) end

--Sets an item in the INT_SAVE array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_int_save_list_value(l, i, v) end

--Generates an INT_SAVE array of n values v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_int_save_n_list(n, v) end

--Gets an item in the STR_SAVE array
---@param l py.List # list
---@param i integer # subscript
---@return string # value
function GameAPI.get_str_save_list_value(l, i) end

--Sets an item in the STR_SAVE array
---@param l py.List # list
---@param i integer # subscript
---@param v string # value
function GameAPI.set_str_save_list_value(l, i, v) end

--Generates n STR_SAVE arrays with the value v
---@param n integer # Length
---@param v? string # value
---@return py.List # list
function GameAPI.get_str_save_n_list(n, v) end

--Gets an item in the FLOAT_SAVE array
---@param l py.List # list
---@param i integer # subscript
---@return py.Fixed # value
function GameAPI.get_float_save_list_value(l, i) end

--Set an item in the FLOAT_SAVE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Fixed # value
function GameAPI.set_float_save_list_value(l, i, v) end

--Generates a FLOAT_SAVE array of n values v
---@param n integer # Length
---@param v? py.Fixed # value
---@return py.List # list
function GameAPI.get_float_save_n_list(n, v) end

--Gets an entry in the BOOL_SAVE array
---@param l py.List # list
---@param i integer # subscript
---@return boolean # value
function GameAPI.get_bool_save_list_value(l, i) end

--Sets an entry in the BOOL_SAVE array
---@param l py.List # list
---@param i integer # subscript
---@param v boolean # value
function GameAPI.set_bool_save_list_value(l, i, v) end

--Generates a BOOL_SAVE array of n values v
---@param n integer # Length
---@param v? boolean # value
---@return py.List # list
function GameAPI.get_bool_save_n_list(n, v) end

--Gets an item in the SCENE_UI array
---@param l py.List # list
---@param i integer # subscript
---@return py.SceneNode # value
function GameAPI.get_scene_ui_list_value(l, i) end

--Set an item in the SCENE_UI array
---@param l py.List # list
---@param i integer # subscript
---@param v py.SceneNode # value
function GameAPI.set_scene_ui_list_value(l, i, v) end

--Generates an array of n SCENE_UI values of v
---@param n integer # Length
---@param v? py.SceneNode # value
---@return py.List # list
function GameAPI.get_scene_ui_n_list(n, v) end

--Gets an item in the UI_ANIM array
---@param l py.List # list
---@param i integer # subscript
---@return py.UIAnimKey # value
function GameAPI.get_ui_anim_list_value(l, i) end

--Sets an item in the UI_ANIM array
---@param l py.List # list
---@param i integer # subscript
---@param v py.UIAnimKey # value
function GameAPI.set_ui_anim_list_value(l, i, v) end

--Generates n UI_ANIM arrays of value v
---@param n integer # Length
---@param v? py.UIAnimKey # value
---@return py.List # list
function GameAPI.get_ui_anim_n_list(n, v) end

--Gets an item in the CAMLINE array
---@param l py.List # list
---@param i integer # subscript
---@return py.CamlineID # value
function GameAPI.get_camline_list_value(l, i) end

--Sets an item in the CAMLINE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.CamlineID # value
function GameAPI.set_camline_list_value(l, i, v) end

--Generates an array of n CAMlines with value v
---@param n integer # Length
---@param v? py.CamlineID # value
---@return py.List # list
function GameAPI.get_camline_n_list(n, v) end

--Gets an item in the TABLE_SAVE array
---@param l py.List # list
---@param i integer # subscript
---@return py.Table # value
function GameAPI.get_table_save_list_value(l, i) end

--Sets an item in the TABLE_SAVE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Table # value
function GameAPI.set_table_save_list_value(l, i, v) end

--Generates an array of n TABLE_SAVE values of v
---@param n integer # Length
---@param v? py.Table # value
---@return py.List # list
function GameAPI.get_table_save_n_list(n, v) end

--Gets an item in the MOVER_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@return py.Mover # value
function GameAPI.get_mover_entity_list_value(l, i) end

--Set an item in the MOVER_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Mover # value
function GameAPI.set_mover_entity_list_value(l, i, v) end

--Generate n MOVER_ENTITY arrays with the value v
---@param n integer # Length
---@param v? py.Mover # value
---@return py.List # list
function GameAPI.get_mover_entity_n_list(n, v) end

--Gets an item in the CURSOR_KEY array
---@param l py.List # list
---@param i integer # subscript
---@return py.CursorKey # value
function GameAPI.get_cursor_key_list_value(l, i) end

--Sets an item in the CURSOR_KEY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.CursorKey # value
function GameAPI.set_cursor_key_list_value(l, i, v) end

--Generates a CURSOR_KEY array of n values v
---@param n integer # Length
---@param v? py.CursorKey # value
---@return py.List # list
function GameAPI.get_cursor_key_n_list(n, v) end

--Gets an item in the VECTOR3 array
---@param l py.List # list
---@param i integer # subscript
---@return py.FVector3 # value
function GameAPI.get_vector3_list_value(l, i) end

--Sets an item in the VECTOR3 array
---@param l py.List # list
---@param i integer # subscript
---@param v py.FVector3 # value
function GameAPI.set_vector3_list_value(l, i, v) end

--Generates n VECTOR3 arrays of value v
---@param n integer # Length
---@param v? py.FVector3 # value
---@return py.List # list
function GameAPI.get_vector3_n_list(n, v) end

--Gets an item in a SEQUENCE array
---@param l py.List # list
---@param i integer # subscript
---@return py.Sequence # value
function GameAPI.get_sequence_list_value(l, i) end

--Sets an item in the SEQUENCE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Sequence # value
function GameAPI.set_sequence_list_value(l, i, v) end

--Generates an array of n sequences with the value v
---@param n integer # Length
---@param v? py.Sequence # value
---@return py.List # list
function GameAPI.get_sequence_n_list(n, v) end

--Get an entry in the PHYSICS_OBJECT array
---@param l py.List # list
---@param i integer # subscript
---@return py.PhysicsObject # value
function GameAPI.get_physics_object_list_value(l, i) end

--Set an entry in the PHYSICS_OBJECT array
---@param l py.List # list
---@param i integer # subscript
---@param v py.PhysicsObject # value
function GameAPI.set_physics_object_list_value(l, i, v) end

--Generate an array of n PHYSICS_OBJECT with the value v
---@param n integer # Length
---@param v? py.PhysicsObject # value
---@return py.List # list
function GameAPI.get_physics_object_n_list(n, v) end

--Get an item in the PHYSICS_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@return py.PhysicsEntity # value
function GameAPI.get_physics_entity_list_value(l, i) end

--Set an item in PHYSICS_ENTITY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.PhysicsEntity # value
function GameAPI.set_physics_entity_list_value(l, i, v) end

--A PHYSICS_ENTITY array with the value v is generated
---@param n integer # Length
---@param v? py.PhysicsEntity # value
---@return py.List # list
function GameAPI.get_physics_entity_n_list(n, v) end

--Gets an entry in the RIGID_BODY array
---@param l py.List # list
---@param i integer # subscript
---@return py.RigidBody # value
function GameAPI.get_rigid_body_list_value(l, i) end

--Sets an item in the RIGID_BODY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.RigidBody # value
function GameAPI.set_rigid_body_list_value(l, i, v) end

--Generates an array of n RIGID_BODY values of v
---@param n integer # Length
---@param v? py.RigidBody # value
---@return py.List # list
function GameAPI.get_rigid_body_n_list(n, v) end

--Gets an entry from the COLLIDER array
---@param l py.List # list
---@param i integer # subscript
---@return py.Collider # value
function GameAPI.get_collider_list_value(l, i) end

--Sets an entry in the COLLIDER array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Collider # value
function GameAPI.set_collider_list_value(l, i, v) end

--Generates an array of n Colliders with the value v
---@param n integer # Length
---@param v? py.Collider # value
---@return py.List # list
function GameAPI.get_collider_n_list(n, v) end

--Gets an item in the ATTR_ELEMENT array
---@param l py.List # list
---@param i integer # subscript
---@return string # value
function GameAPI.get_attr_element_list_value(l, i) end

--Sets an item in the ATTR_ELEMENT array
---@param l py.List # list
---@param i integer # subscript
---@param v string # value
function GameAPI.set_attr_element_list_value(l, i, v) end

--Generates an array of n attr_elements with the value v
---@param n integer # Length
---@param v? string # value
---@return py.List # list
function GameAPI.get_attr_element_n_list(n, v) end

--Gets an entry in the ATTR_ELEMENT_READ array
---@param l py.List # list
---@param i integer # subscript
---@return string # value
function GameAPI.get_attr_element_read_list_value(l, i) end

--Sets an entry in the ATTR_ELEMENT_READ array
---@param l py.List # list
---@param i integer # subscript
---@param v string # value
function GameAPI.set_attr_element_read_list_value(l, i, v) end

--Generates an array of n ATTR_ELEMENT_READ values of v
---@param n integer # Length
---@param v? string # value
---@return py.List # list
function GameAPI.get_attr_element_read_n_list(n, v) end

--Gets an item in the JOINT array
---@param l py.List # list
---@param i integer # subscript
---@return py.Joint # value
function GameAPI.get_joint_list_value(l, i) end

--Sets an item in the JOINT array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Joint # value
function GameAPI.set_joint_list_value(l, i, v) end

--Generates a JOINT array of n values v
---@param n integer # Length
---@param v? py.Joint # value
---@return py.List # list
function GameAPI.get_joint_n_list(n, v) end

--Get PHYSICS_OBJECT_KEY array entry
---@param l py.List # list
---@param i integer # subscript
---@return py.PhysicsObjectKey # value
function GameAPI.get_physics_object_key_list_value(l, i) end

--Set PHYSICS_OBJECT_KEY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.PhysicsObjectKey # value
function GameAPI.set_physics_object_key_list_value(l, i, v) end

--Generate n PHYSICS_OBJECT_KEY arrays with the value v
---@param n integer # Length
---@param v? py.PhysicsObjectKey # value
---@return py.List # list
function GameAPI.get_physics_object_key_n_list(n, v) end

--Get an entry in the PHYSICS_ENTITY_KEY array
---@param l py.List # list
---@param i integer # subscript
---@return py.PhysicsEntityKey # value
function GameAPI.get_physics_entity_key_list_value(l, i) end

--Set an entry in the PHYSICS_ENTITY_KEY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.PhysicsEntityKey # value
function GameAPI.set_physics_entity_key_list_value(l, i, v) end

--Generates an array of n PHYSICS_ENTITY_KEY values of v
---@param n integer # Length
---@param v? py.PhysicsEntityKey # value
---@return py.List # list
function GameAPI.get_physics_entity_key_n_list(n, v) end

--Gets an item in the ROTATION array
---@param l py.List # list
---@param i integer # subscript
---@return py.FRotation # value
function GameAPI.get_rotation_list_value(l, i) end

--Sets an item in the ROTATION array
---@param l py.List # list
---@param i integer # subscript
---@param v py.FRotation # value
function GameAPI.set_rotation_list_value(l, i, v) end

--Generates n ROTATION arrays with the value v
---@param n integer # Length
---@param v? py.FRotation # value
---@return py.List # list
function GameAPI.get_rotation_n_list(n, v) end

--Gets an entry in the RIGID_BODY_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@return py.RigidBodyGroup # value
function GameAPI.get_rigid_body_group_list_value(l, i) end

--Sets an item in the RIGID_BODY_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@param v py.RigidBodyGroup # value
function GameAPI.set_rigid_body_group_list_value(l, i, v) end

--Generates an array of n RIGID_BODY_GROUP values of v
---@param n integer # Length
---@param v? py.RigidBodyGroup # value
---@return py.List # list
function GameAPI.get_rigid_body_group_n_list(n, v) end

--Gets an item in the REACTION array
---@param l py.List # list
---@param i integer # subscript
---@return py.Reaction # value
function GameAPI.get_reaction_list_value(l, i) end

--Sets an item in the REACTION array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Reaction # value
function GameAPI.set_reaction_list_value(l, i, v) end

--Generates an array of n reactions with the value v
---@param n integer # Length
---@param v? py.Reaction # value
---@return py.List # list
function GameAPI.get_reaction_n_list(n, v) end

--Obtain REACTION_GROUP array
---@param l py.List # list
---@param i integer # subscript
---@return py.ReactionGroup # value
function GameAPI.get_reaction_group_list_value(l, i) end

--Set either _group to an item in the array
---@param l py.List # list
---@param i integer # subscript
---@param v py.ReactionGroup # value
function GameAPI.set_reaction_group_list_value(l, i, v) end

--Generate n REACTION_GROUP array with the value v
---@param n integer # Length
---@param v? py.ReactionGroup # value
---@return py.List # list
function GameAPI.get_reaction_group_n_list(n, v) end

--Gets an item in the UI_ANIM_CURVE array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_ui_anim_curve_list_value(l, i) end

--Sets an item in the UI_ANIM_CURVE array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_ui_anim_curve_list_value(l, i, v) end

--Generates a UI_ANIM_CURVE array of n values v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_ui_anim_curve_n_list(n, v) end

--Obtain an entry in the PHYSICS_FILTER array
---@param l py.List # list
---@param i integer # subscript
---@return py.PhysicsFilter # value
function GameAPI.get_physics_filter_list_value(l, i) end

--Set an entry in the PHYSICS_FILTER array
---@param l py.List # list
---@param i integer # subscript
---@param v py.PhysicsFilter # value
function GameAPI.set_physics_filter_list_value(l, i, v) end

--Generates n PHYSICS_FILTER arrays with the value v
---@param n integer # Length
---@param v? py.PhysicsFilter # value
---@return py.List # list
function GameAPI.get_physics_filter_n_list(n, v) end

--Gets an entry in the GLOBAL_ARCHIVE_SLOT array
---@param l py.List # list
---@param i integer # subscript
---@return string # value
function GameAPI.get_global_archive_slot_list_value(l, i) end

--Example Set an item in the GLOBAL_ARCHIVE_SLOT array
---@param l py.List # list
---@param i integer # subscript
---@param v string # value
function GameAPI.set_global_archive_slot_list_value(l, i, v) end

--Generates n GLOBAL_ARCHIVE_SLOT arrays with the value v
---@param n integer # Length
---@param v? string # value
---@return py.List # list
function GameAPI.get_global_archive_slot_n_list(n, v) end

--Gets an item in the RANDOM_POOL_DROP array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_random_pool_drop_list_value(l, i) end

--Set an item in the RANDOM_POOL_DROP array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_random_pool_drop_list_value(l, i, v) end

--Generate an array of n RANDOM_POOL_DROP values of v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_random_pool_drop_n_list(n, v) end

--Gets an item in the DAMAGE_ATTACK_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_damage_attack_type_list_value(l, i) end

--Sets an item in the DAMAGE_ATTACK_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_damage_attack_type_list_value(l, i, v) end

--Generates a DAMAGE_ATTACK_TYPE array of n values v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_damage_attack_type_n_list(n, v) end

--Gets an item in the DAMAGE_ARMOR_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_damage_armor_type_list_value(l, i) end

--Sets an item in the DAMAGE_ARMOR_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_damage_armor_type_list_value(l, i, v) end

--Generates a DAMAGE_ARMOR_TYPE array of n values v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_damage_armor_type_n_list(n, v) end

--Gets an item in the GAME_MODE array
---@param l py.List # list
---@param i integer # subscript
---@return py.GameMode # value
function GameAPI.get_game_mode_list_value(l, i) end

--Sets an item in the GAME_MODE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.GameMode # value
function GameAPI.set_game_mode_list_value(l, i, v) end

--Generates n GAME_MODE arrays with the value v
---@param n integer # Length
---@param v? py.GameMode # value
---@return py.List # list
function GameAPI.get_game_mode_n_list(n, v) end

--Gets an item in the IMAGE_QUALITY array
---@param l py.List # list
---@param i integer # subscript
---@return string # value
function GameAPI.get_image_quality_list_value(l, i) end

--Sets an item in the IMAGE_QUALITY array
---@param l py.List # list
---@param i integer # subscript
---@param v string # value
function GameAPI.set_image_quality_list_value(l, i, v) end

--Generates an array of n IMAGE_QUALITY values of v
---@param n integer # Length
---@param v? string # value
---@return py.List # list
function GameAPI.get_image_quality_n_list(n, v) end

--Gets an entry in the WINDOW_TYPE_SETTING array
---@param l py.List # list
---@param i integer # subscript
---@return string # value
function GameAPI.get_window_type_setting_list_value(l, i) end

--Sets an item in the WINDOW_TYPE_SETTING array
---@param l py.List # list
---@param i integer # subscript
---@param v string # value
function GameAPI.set_window_type_setting_list_value(l, i, v) end

--Generates n WINDOW_TYPE_SETTING arrays of value v
---@param n integer # Length
---@param v? string # value
---@return py.List # list
function GameAPI.get_window_type_setting_n_list(n, v) end

--Gets an item in the KEYBOARD_KEY array
---@param l py.List # list
---@param i integer # subscript
---@return py.KeyboardKey # value
function GameAPI.get_keyboard_key_list_value(l, i) end

--Set an item in the KEYBOARD_KEY array
---@param l py.List # list
---@param i integer # subscript
---@param v py.KeyboardKey # value
function GameAPI.set_keyboard_key_list_value(l, i, v) end

--Generates a KEYBOARD_KEY array of n values v
---@param n integer # Length
---@param v? py.KeyboardKey # value
---@return py.List # list
function GameAPI.get_keyboard_key_n_list(n, v) end

--Gets an item in the POINT_LIGHT array
---@param l py.List # list
---@param i integer # subscript
---@return py.PointLight # value
function GameAPI.get_point_light_list_value(l, i) end

--Sets an item in the POINT_LIGHT array
---@param l py.List # list
---@param i integer # subscript
---@param v py.PointLight # value
function GameAPI.set_point_light_list_value(l, i, v) end

--Generates an array of n POINT_LIGHT values of v
---@param n integer # Length
---@param v? py.PointLight # value
---@return py.List # list
function GameAPI.get_point_light_n_list(n, v) end

--Gets an item in the SPOT_LIGHT array
---@param l py.List # list
---@param i integer # subscript
---@return py.SpotLight # value
function GameAPI.get_spot_light_list_value(l, i) end

--Sets an item in the SPOT_LIGHT array
---@param l py.List # list
---@param i integer # subscript
---@param v py.SpotLight # value
function GameAPI.set_spot_light_list_value(l, i, v) end

--Generates an array of n SPOT_LIGHT values of v
---@param n integer # Length
---@param v? py.SpotLight # value
---@return py.List # list
function GameAPI.get_spot_light_n_list(n, v) end

--Gets an item in the FOG array
---@param l py.List # list
---@param i integer # subscript
---@return py.Fog # value
function GameAPI.get_fog_list_value(l, i) end

--Sets an item in the FOG array
---@param l py.List # list
---@param i integer # subscript
---@param v py.Fog # value
function GameAPI.set_fog_list_value(l, i, v) end

--Generates n FOG arrays of value v
---@param n integer # Length
---@param v? py.Fog # value
---@return py.List # list
function GameAPI.get_fog_n_list(n, v) end

--Gets an item in the UI_PREFAB array
---@param l py.List # list
---@param i integer # subscript
---@return string # value
function GameAPI.get_ui_prefab_list_value(l, i) end

--Sets an item in the UI_PREFAB array
---@param l py.List # list
---@param i integer # subscript
---@param v string # value
function GameAPI.set_ui_prefab_list_value(l, i, v) end

--Generates a UI_PREFAB array of n values v
---@param n integer # Length
---@param v? string # value
---@return py.List # list
function GameAPI.get_ui_prefab_n_list(n, v) end

--Gets an item in the UI_PREFAB_INSTANCE array
---@param l py.List # list
---@param i integer # subscript
---@return py.UIPrefabIns # value
function GameAPI.get_ui_prefab_instance_list_value(l, i) end

--Sets an item in the UI_PREFAB_INSTANCE array
---@param l py.List # list
---@param i integer # subscript
---@param v py.UIPrefabIns # value
function GameAPI.set_ui_prefab_instance_list_value(l, i, v) end

--Generates a UI_PREFAB_INSTANCE array of n values v
---@param n integer # Length
---@param v? py.UIPrefabIns # value
---@return py.List # list
function GameAPI.get_ui_prefab_instance_n_list(n, v) end

--Gets an item in the UI_PREFAB_INS_UID array
---@param l py.List # list
---@param i integer # subscript
---@return string # value
function GameAPI.get_ui_prefab_ins_uid_list_value(l, i) end

--Sets an item in the UI_PREFAB_INS_UID array
---@param l py.List # list
---@param i integer # subscript
---@param v string # value
function GameAPI.set_ui_prefab_ins_uid_list_value(l, i, v) end

--Generates n UI_PREFAB_INS_UID arrays of value v
---@param n integer # Length
---@param v? string # value
---@return py.List # list
function GameAPI.get_ui_prefab_ins_uid_n_list(n, v) end

--Gets an item in the AUDIO_CHANNEL array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_audio_channel_list_value(l, i) end

--Sets an item in the AUDIO_CHANNEL array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_audio_channel_list_value(l, i, v) end

--Generates an AUDIO_CHANNEL array of n values v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_audio_channel_n_list(n, v) end

--Gets an item in the UI_MODEL_CAMERA_MOD array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_ui_model_camera_mod_list_value(l, i) end

--Sets an item in the UI_MODEL_CAMERA_MOD array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_ui_model_camera_mod_list_value(l, i, v) end

--Generates n UI_MODEL_CAMERA_MOD arrays of value v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_ui_model_camera_mod_n_list(n, v) end

--Gets an item in the UI_BTN_STATUS array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_ui_btn_status_list_value(l, i) end

--Sets an item in the UI_BTN_STATUS array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_ui_btn_status_list_value(l, i, v) end

--Generates n UI_BTN_STATUS arrays with value v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_ui_btn_status_n_list(n, v) end

--Gets an item in the UI_SCROLLVIEW_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@return integer # value
function GameAPI.get_ui_scrollview_type_list_value(l, i) end

--Sets an item in the UI_SCROLLVIEW_TYPE array
---@param l py.List # list
---@param i integer # subscript
---@param v integer # value
function GameAPI.set_ui_scrollview_type_list_value(l, i, v) end

--Generates n UI_SCROLLVIEW_TYPE arrays of value v
---@param n integer # Length
---@param v? integer # value
---@return py.List # list
function GameAPI.get_ui_scrollview_type_n_list(n, v) end

--Default library adds BOOLEAN key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_boolean_kv(item_key, key, value) end

--The default library adds INTEGER key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_integer_kv(item_key, key, value) end

--Default libraries add FLOAT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_float_kv(item_key, key, value) end

--The default library adds STRING key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_string_kv(item_key, key, value) end

--The default library adds UI_COMP key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_comp_kv(item_key, key, value) end

--The default library adds UI_COMP_TYPE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_comp_type_kv(item_key, key, value) end

--The default library adds UI_COMP_EVENT_TYPE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_comp_event_type_kv(item_key, key, value) end

--The default library adds UI_COMP_ATTR key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_comp_attr_kv(item_key, key, value) end

--The default library adds a UI_COMP_ALIGN_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_comp_align_type_kv(item_key, key, value) end

--The default library adds UI_PREFAB key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_prefab_kv(item_key, key, value) end

--The default library adds UI_PREFAB_INSTANCE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_prefab_instance_kv(item_key, key, value) end

--The default library adds a UI_PREFAB_INS_UID key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_prefab_ins_uid_kv(item_key, key, value) end

--The default library adds UI_DIRECTION key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_direction_kv(item_key, key, value) end

--The default library adds a UI_MODEL_CAMERA_MOD key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_model_camera_mod_kv(item_key, key, value) end

--The default library adds a UI_BTN_STATUS key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_btn_status_kv(item_key, key, value) end

--The default library adds UI_SCROLLVIEW_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_scrollview_type_kv(item_key, key, value) end

--The default library adds UI_ANIM key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_anim_kv(item_key, key, value) end

--The default library adds a UI_ANIM_CURVE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ui_anim_curve_kv(item_key, key, value) end

--The default library adds AUDIO_CHANNEL key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_audio_channel_kv(item_key, key, value) end

--Add a UNIT_ENTITY key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_unit_entity_kv(item_key, key, value) end

--The default library adds a UNIT_GROUP key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_unit_group_kv(item_key, key, value) end

--The default library adds a UNIT_NAME key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_unit_name_kv(item_key, key, value) end

--Add a UNIT_NAME_POOL key and value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_unit_name_pool_kv(item_key, key, value) end

--The default library adds a UNIT_WRITE_ATTRIBUTE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_unit_write_attribute_kv(item_key, key, value) end

--The default library adds ATTR_ELEMENT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_attr_element_kv(item_key, key, value) end

--The default library adds ATTR_ELEMENT_READ key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_attr_element_read_kv(item_key, key, value) end

--Add MOVER_ENTITY key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_mover_entity_kv(item_key, key, value) end

--The default library adds IMAGE_QUALITY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_image_quality_kv(item_key, key, value) end

--The default library adds a WINDOW_TYPE_SETTING key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_window_type_setting_kv(item_key, key, value) end

--The default library adds ITEM_ENTITY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_item_entity_kv(item_key, key, value) end

--The default library adds ITEM_GROUP key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_item_group_kv(item_key, key, value) end

--The default library adds an ITEM_NAME key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_item_name_kv(item_key, key, value) end

--ABILITY key-value pair added to default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ability_kv(item_key, key, value) end

--The default library adds ABILITY_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ability_type_kv(item_key, key, value) end

--The default library adds ABILITY_CAST_TYPE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ability_cast_type_kv(item_key, key, value) end

--The default library adds ABILITY_NAME key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_ability_name_kv(item_key, key, value) end

--Adds SKILL_POINTER_TYPE key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_skill_pointer_type_kv(item_key, key, value) end

--Default library adds MODIFIER_ENTITY key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_modifier_entity_kv(item_key, key, value) end

--Default library adds MODIFIER_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_modifier_type_kv(item_key, key, value) end

--Add MODIFIER_EFFECT_TYPE key pair to default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_modifier_effect_type_kv(item_key, key, value) end

--Default Library Adds MODIFIER key pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_modifier_kv(item_key, key, value) end

--The default library adds a PROJECTILE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_projectile_kv(item_key, key, value) end

--PROJECTILE_ENTITY key value pairs are added to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_projectile_entity_kv(item_key, key, value) end

--The default library adds PROJECTILE_GROUP key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_projectile_group_kv(item_key, key, value) end

--Add a DESTRUCTIBLE_ENTITY key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_destructible_entity_kv(item_key, key, value) end

--Add a DESTRUCTIBLE_NAME key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_destructible_name_kv(item_key, key, value) end

--The SOUND_ENTITY key pair is added to the preset library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_sound_entity_kv(item_key, key, value) end

--The default library adds AUDIO_KEY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_audio_key_kv(item_key, key, value) end

--The default library adds GAME_MODE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_game_mode_kv(item_key, key, value) end

--The default library adds PLAYER key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_player_kv(item_key, key, value) end

--The default library adds a PLAYER_GROUP key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_player_group_kv(item_key, key, value) end

--Add a ROLE_RES_KEY key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_role_res_key_kv(item_key, key, value) end

--The default library adds a ROLE_STATUS key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_role_status_kv(item_key, key, value) end

--The default library adds ROLE_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_role_type_kv(item_key, key, value) end

--The default library adds ROLE_RELATION key and value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_role_relation_kv(item_key, key, value) end

--Default libraries add TEAM key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_team_kv(item_key, key, value) end

--The default library adds a POINT key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_point_kv(item_key, key, value) end

--The default library adds VECTOR3 key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_vector3_kv(item_key, key, value) end

--Add ROTATION key pairs to default libraries
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_rotation_kv(item_key, key, value) end

--The default library adds POINT_LIST key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_point_list_kv(item_key, key, value) end

--The default library adds a RECTANGLE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_rectangle_kv(item_key, key, value) end

--The default library adds ROUND_AREA key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_round_area_kv(item_key, key, value) end

--The default library adds POLYGON key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_polygon_kv(item_key, key, value) end

--The default library adds a CAMERA key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_camera_kv(item_key, key, value) end

--The default library adds CAMLINE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_camline_kv(item_key, key, value) end

--The default library adds POINT_LIGHT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_point_light_kv(item_key, key, value) end

--The default library adds SPOT_LIGHT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_spot_light_kv(item_key, key, value) end

--The default library adds FOG key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_fog_kv(item_key, key, value) end

--Add a SCENE_SOUND key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_scene_sound_kv(item_key, key, value) end

--The default library adds MODEL key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_model_kv(item_key, key, value) end

--Add SFX_ENTITY key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_sfx_entity_kv(item_key, key, value) end

--The default library adds SFX_KEY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_sfx_key_kv(item_key, key, value) end

--Add a LINK_SFX_ENTITY key pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_link_sfx_entity_kv(item_key, key, value) end

--Default libraries add LINK_SFX_KEY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_link_sfx_key_kv(item_key, key, value) end

--The default library adds a CURSOR_KEY key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_cursor_key_kv(item_key, key, value) end

--The default library adds ANGLE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_angle_kv(item_key, key, value) end

--The default library adds TEXTURE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_texture_kv(item_key, key, value) end

--Add SEQUENCE key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_sequence_kv(item_key, key, value) end

--Add PHYSICS_OBJECT key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_physics_object_kv(item_key, key, value) end

--Add PHYSICS_ENTITY key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_physics_entity_kv(item_key, key, value) end

--Add PHYSICS_OBJECT_KEY key pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_physics_object_key_kv(item_key, key, value) end

--Add a PHYSICS_ENTITY_KEY key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_physics_entity_key_kv(item_key, key, value) end

--The default library adds RIGID_BODY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_rigid_body_kv(item_key, key, value) end

--The default library adds RIGID_BODY_GROUP key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_rigid_body_group_kv(item_key, key, value) end

--The default library adds COLLIDER key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_collider_kv(item_key, key, value) end

--Default libraries add JOINT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_joint_kv(item_key, key, value) end

--The default library adds a REACTION key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_reaction_kv(item_key, key, value) end

--Add a REACTION_GROUP key value pair to the preset library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_reaction_group_kv(item_key, key, value) end

--The default library adds DYNAMIC_TRIGGER_INSTANCE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_dynamic_trigger_instance_kv(item_key, key, value) end

--The default library adds TABLE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_table_kv(item_key, key, value) end

--Add a RANDOM_POOL key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_random_pool_kv(item_key, key, value) end

--Add a SCENE_UI key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_scene_ui_kv(item_key, key, value) end

--The default library adds a DAMAGE_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_damage_type_kv(item_key, key, value) end

--The default library adds a HARM_TEXT_TYPE_NEW key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_harm_text_type_new_kv(item_key, key, value) end

--The default library adds a FONT_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_font_type_kv(item_key, key, value) end

--The default library adds JUMP_WORD_TRACK key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_jump_word_track_kv(item_key, key, value) end

--The default library adds a NEW_TIMER key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_new_timer_kv(item_key, key, value) end

--The default library adds a TECH_KEY key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_tech_key_kv(item_key, key, value) end

--Add STORE_KEY key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_store_key_kv(item_key, key, value) end

--Add a KEYBOARD_KEY pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_keyboard_key_kv(item_key, key, value) end

--Add FUNC_KEYBOARD_KEY key pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_func_keyboard_key_kv(item_key, key, value) end

--The default library adds MOUSE_KEY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_mouse_key_kv(item_key, key, value) end

--The default library adds MOUSE_WHEEL key pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_mouse_wheel_kv(item_key, key, value) end

--The default library adds a POST_EFFECT key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_post_effect_kv(item_key, key, value) end

--The default library adds a UNIT_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_unit_type_kv(item_key, key, value) end

--The default library adds UNIT_COMMAND_TYPE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_unit_command_type_kv(item_key, key, value) end

--Add MINI_MAP_COLOR_TYPE key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_mini_map_color_type_kv(item_key, key, value) end

--The default library adds a UNIT_BEHAVIOR key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_unit_behavior_kv(item_key, key, value) end

--The default library adds a CURVED_PATH key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_curved_path_kv(item_key, key, value) end

--The default library adds CURVED_PATH_3D key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_unit_key_curved_path_3d_kv(item_key, key, value) end

--Default library adds BOOLEAN key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_boolean_kv(item_key, key, value) end

--The default library adds INTEGER key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_integer_kv(item_key, key, value) end

--Default libraries add FLOAT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_float_kv(item_key, key, value) end

--The default library adds STRING key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_string_kv(item_key, key, value) end

--The default library adds UI_COMP key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_comp_kv(item_key, key, value) end

--The default library adds UI_COMP_TYPE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_comp_type_kv(item_key, key, value) end

--The default library adds UI_COMP_EVENT_TYPE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_comp_event_type_kv(item_key, key, value) end

--The default library adds UI_COMP_ATTR key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_comp_attr_kv(item_key, key, value) end

--The default library adds a UI_COMP_ALIGN_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_comp_align_type_kv(item_key, key, value) end

--The default library adds UI_PREFAB key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_prefab_kv(item_key, key, value) end

--The default library adds UI_PREFAB_INSTANCE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_prefab_instance_kv(item_key, key, value) end

--The default library adds a UI_PREFAB_INS_UID key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_prefab_ins_uid_kv(item_key, key, value) end

--The default library adds UI_DIRECTION key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_direction_kv(item_key, key, value) end

--The default library adds a UI_MODEL_CAMERA_MOD key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_model_camera_mod_kv(item_key, key, value) end

--The default library adds a UI_BTN_STATUS key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_btn_status_kv(item_key, key, value) end

--The default library adds UI_SCROLLVIEW_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_scrollview_type_kv(item_key, key, value) end

--The default library adds UI_ANIM key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_anim_kv(item_key, key, value) end

--The default library adds a UI_ANIM_CURVE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ui_anim_curve_kv(item_key, key, value) end

--The default library adds AUDIO_CHANNEL key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_audio_channel_kv(item_key, key, value) end

--Add a UNIT_ENTITY key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_unit_entity_kv(item_key, key, value) end

--The default library adds a UNIT_GROUP key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_unit_group_kv(item_key, key, value) end

--The default library adds a UNIT_NAME key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_unit_name_kv(item_key, key, value) end

--Add a UNIT_NAME_POOL key and value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_unit_name_pool_kv(item_key, key, value) end

--The default library adds a UNIT_WRITE_ATTRIBUTE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_unit_write_attribute_kv(item_key, key, value) end

--The default library adds ATTR_ELEMENT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_attr_element_kv(item_key, key, value) end

--The default library adds ATTR_ELEMENT_READ key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_attr_element_read_kv(item_key, key, value) end

--Add MOVER_ENTITY key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_mover_entity_kv(item_key, key, value) end

--The default library adds IMAGE_QUALITY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_image_quality_kv(item_key, key, value) end

--The default library adds a WINDOW_TYPE_SETTING key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_window_type_setting_kv(item_key, key, value) end

--The default library adds ITEM_ENTITY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_item_entity_kv(item_key, key, value) end

--The default library adds ITEM_GROUP key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_item_group_kv(item_key, key, value) end

--The default library adds an ITEM_NAME key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_item_name_kv(item_key, key, value) end

--ABILITY key-value pair added to default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ability_kv(item_key, key, value) end

--The default library adds ABILITY_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ability_type_kv(item_key, key, value) end

--The default library adds ABILITY_CAST_TYPE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ability_cast_type_kv(item_key, key, value) end

--The default library adds ABILITY_NAME key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_ability_name_kv(item_key, key, value) end

--Adds SKILL_POINTER_TYPE key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_skill_pointer_type_kv(item_key, key, value) end

--Default library adds MODIFIER_ENTITY key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_modifier_entity_kv(item_key, key, value) end

--Default library adds MODIFIER_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_modifier_type_kv(item_key, key, value) end

--Add MODIFIER_EFFECT_TYPE key pair to default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_modifier_effect_type_kv(item_key, key, value) end

--Default Library Adds MODIFIER key pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_modifier_kv(item_key, key, value) end

--The default library adds a PROJECTILE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_projectile_kv(item_key, key, value) end

--PROJECTILE_ENTITY key value pairs are added to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_projectile_entity_kv(item_key, key, value) end

--The default library adds PROJECTILE_GROUP key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_projectile_group_kv(item_key, key, value) end

--Add a DESTRUCTIBLE_ENTITY key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_destructible_entity_kv(item_key, key, value) end

--Add a DESTRUCTIBLE_NAME key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_destructible_name_kv(item_key, key, value) end

--The SOUND_ENTITY key pair is added to the preset library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_sound_entity_kv(item_key, key, value) end

--The default library adds AUDIO_KEY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_audio_key_kv(item_key, key, value) end

--The default library adds GAME_MODE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_game_mode_kv(item_key, key, value) end

--The default library adds PLAYER key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_player_kv(item_key, key, value) end

--The default library adds a PLAYER_GROUP key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_player_group_kv(item_key, key, value) end

--Add a ROLE_RES_KEY key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_role_res_key_kv(item_key, key, value) end

--The default library adds a ROLE_STATUS key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_role_status_kv(item_key, key, value) end

--The default library adds ROLE_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_role_type_kv(item_key, key, value) end

--The default library adds ROLE_RELATION key and value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_role_relation_kv(item_key, key, value) end

--Default libraries add TEAM key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_team_kv(item_key, key, value) end

--The default library adds a POINT key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_point_kv(item_key, key, value) end

--The default library adds VECTOR3 key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_vector3_kv(item_key, key, value) end

--Add ROTATION key pairs to default libraries
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_rotation_kv(item_key, key, value) end

--The default library adds POINT_LIST key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_point_list_kv(item_key, key, value) end

--The default library adds a RECTANGLE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_rectangle_kv(item_key, key, value) end

--The default library adds ROUND_AREA key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_round_area_kv(item_key, key, value) end

--The default library adds POLYGON key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_polygon_kv(item_key, key, value) end

--The default library adds a CAMERA key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_camera_kv(item_key, key, value) end

--The default library adds CAMLINE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_camline_kv(item_key, key, value) end

--The default library adds POINT_LIGHT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_point_light_kv(item_key, key, value) end

--The default library adds SPOT_LIGHT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_spot_light_kv(item_key, key, value) end

--The default library adds FOG key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_fog_kv(item_key, key, value) end

--Add a SCENE_SOUND key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_scene_sound_kv(item_key, key, value) end

--The default library adds MODEL key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_model_kv(item_key, key, value) end

--Add SFX_ENTITY key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_sfx_entity_kv(item_key, key, value) end

--The default library adds SFX_KEY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_sfx_key_kv(item_key, key, value) end

--Add a LINK_SFX_ENTITY key pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_link_sfx_entity_kv(item_key, key, value) end

--Default libraries add LINK_SFX_KEY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_link_sfx_key_kv(item_key, key, value) end

--The default library adds a CURSOR_KEY key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_cursor_key_kv(item_key, key, value) end

--The default library adds ANGLE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_angle_kv(item_key, key, value) end

--The default library adds TEXTURE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_texture_kv(item_key, key, value) end

--Add SEQUENCE key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_sequence_kv(item_key, key, value) end

--Add PHYSICS_OBJECT key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_physics_object_kv(item_key, key, value) end

--Add PHYSICS_ENTITY key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_physics_entity_kv(item_key, key, value) end

--Add PHYSICS_OBJECT_KEY key pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_physics_object_key_kv(item_key, key, value) end

--Add a PHYSICS_ENTITY_KEY key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_physics_entity_key_kv(item_key, key, value) end

--The default library adds RIGID_BODY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_rigid_body_kv(item_key, key, value) end

--The default library adds RIGID_BODY_GROUP key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_rigid_body_group_kv(item_key, key, value) end

--The default library adds COLLIDER key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_collider_kv(item_key, key, value) end

--Default libraries add JOINT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_joint_kv(item_key, key, value) end

--The default library adds a REACTION key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_reaction_kv(item_key, key, value) end

--Add a REACTION_GROUP key value pair to the preset library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_reaction_group_kv(item_key, key, value) end

--The default library adds DYNAMIC_TRIGGER_INSTANCE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_dynamic_trigger_instance_kv(item_key, key, value) end

--The default library adds TABLE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_table_kv(item_key, key, value) end

--Add a RANDOM_POOL key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_random_pool_kv(item_key, key, value) end

--Add a SCENE_UI key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_scene_ui_kv(item_key, key, value) end

--The default library adds a DAMAGE_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_damage_type_kv(item_key, key, value) end

--The default library adds a HARM_TEXT_TYPE_NEW key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_harm_text_type_new_kv(item_key, key, value) end

--The default library adds a FONT_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_font_type_kv(item_key, key, value) end

--The default library adds JUMP_WORD_TRACK key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_jump_word_track_kv(item_key, key, value) end

--The default library adds a NEW_TIMER key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_new_timer_kv(item_key, key, value) end

--The default library adds a TECH_KEY key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_tech_key_kv(item_key, key, value) end

--Add STORE_KEY key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_store_key_kv(item_key, key, value) end

--Add a KEYBOARD_KEY pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_keyboard_key_kv(item_key, key, value) end

--Add FUNC_KEYBOARD_KEY key pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_func_keyboard_key_kv(item_key, key, value) end

--The default library adds MOUSE_KEY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_mouse_key_kv(item_key, key, value) end

--The default library adds MOUSE_WHEEL key pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_mouse_wheel_kv(item_key, key, value) end

--The default library adds a POST_EFFECT key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_post_effect_kv(item_key, key, value) end

--The default library adds a UNIT_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_unit_type_kv(item_key, key, value) end

--The default library adds UNIT_COMMAND_TYPE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_unit_command_type_kv(item_key, key, value) end

--Add MINI_MAP_COLOR_TYPE key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_mini_map_color_type_kv(item_key, key, value) end

--The default library adds a UNIT_BEHAVIOR key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_unit_behavior_kv(item_key, key, value) end

--The default library adds a CURVED_PATH key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_curved_path_kv(item_key, key, value) end

--The default library adds CURVED_PATH_3D key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_item_key_curved_path_3d_kv(item_key, key, value) end

--Default library adds BOOLEAN key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_boolean_kv(item_key, key, value) end

--The default library adds INTEGER key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_integer_kv(item_key, key, value) end

--Default libraries add FLOAT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_float_kv(item_key, key, value) end

--The default library adds STRING key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_string_kv(item_key, key, value) end

--The default library adds UI_COMP key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_comp_kv(item_key, key, value) end

--The default library adds UI_COMP_TYPE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_comp_type_kv(item_key, key, value) end

--The default library adds UI_COMP_EVENT_TYPE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_comp_event_type_kv(item_key, key, value) end

--The default library adds UI_COMP_ATTR key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_comp_attr_kv(item_key, key, value) end

--The default library adds a UI_COMP_ALIGN_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_comp_align_type_kv(item_key, key, value) end

--The default library adds UI_PREFAB key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_prefab_kv(item_key, key, value) end

--The default library adds UI_PREFAB_INSTANCE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_prefab_instance_kv(item_key, key, value) end

--The default library adds a UI_PREFAB_INS_UID key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_prefab_ins_uid_kv(item_key, key, value) end

--The default library adds UI_DIRECTION key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_direction_kv(item_key, key, value) end

--The default library adds a UI_MODEL_CAMERA_MOD key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_model_camera_mod_kv(item_key, key, value) end

--The default library adds a UI_BTN_STATUS key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_btn_status_kv(item_key, key, value) end

--The default library adds UI_SCROLLVIEW_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_scrollview_type_kv(item_key, key, value) end

--The default library adds UI_ANIM key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_anim_kv(item_key, key, value) end

--The default library adds a UI_ANIM_CURVE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ui_anim_curve_kv(item_key, key, value) end

--The default library adds AUDIO_CHANNEL key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_audio_channel_kv(item_key, key, value) end

--Add a UNIT_ENTITY key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_unit_entity_kv(item_key, key, value) end

--The default library adds a UNIT_GROUP key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_unit_group_kv(item_key, key, value) end

--The default library adds a UNIT_NAME key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_unit_name_kv(item_key, key, value) end

--Add a UNIT_NAME_POOL key and value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_unit_name_pool_kv(item_key, key, value) end

--The default library adds a UNIT_WRITE_ATTRIBUTE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_unit_write_attribute_kv(item_key, key, value) end

--The default library adds ATTR_ELEMENT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_attr_element_kv(item_key, key, value) end

--The default library adds ATTR_ELEMENT_READ key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_attr_element_read_kv(item_key, key, value) end

--Add MOVER_ENTITY key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_mover_entity_kv(item_key, key, value) end

--The default library adds IMAGE_QUALITY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_image_quality_kv(item_key, key, value) end

--The default library adds a WINDOW_TYPE_SETTING key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_window_type_setting_kv(item_key, key, value) end

--The default library adds ITEM_ENTITY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_item_entity_kv(item_key, key, value) end

--The default library adds ITEM_GROUP key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_item_group_kv(item_key, key, value) end

--The default library adds an ITEM_NAME key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_item_name_kv(item_key, key, value) end

--ABILITY key-value pair added to default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ability_kv(item_key, key, value) end

--The default library adds ABILITY_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ability_type_kv(item_key, key, value) end

--The default library adds ABILITY_CAST_TYPE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ability_cast_type_kv(item_key, key, value) end

--The default library adds ABILITY_NAME key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_ability_name_kv(item_key, key, value) end

--Adds SKILL_POINTER_TYPE key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_skill_pointer_type_kv(item_key, key, value) end

--Default library adds MODIFIER_ENTITY key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_modifier_entity_kv(item_key, key, value) end

--Default library adds MODIFIER_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_modifier_type_kv(item_key, key, value) end

--Add MODIFIER_EFFECT_TYPE key pair to default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_modifier_effect_type_kv(item_key, key, value) end

--Default Library Adds MODIFIER key pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_modifier_kv(item_key, key, value) end

--The default library adds a PROJECTILE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_projectile_kv(item_key, key, value) end

--PROJECTILE_ENTITY key value pairs are added to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_projectile_entity_kv(item_key, key, value) end

--The default library adds PROJECTILE_GROUP key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_projectile_group_kv(item_key, key, value) end

--Add a DESTRUCTIBLE_ENTITY key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_destructible_entity_kv(item_key, key, value) end

--Add a DESTRUCTIBLE_NAME key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_destructible_name_kv(item_key, key, value) end

--The SOUND_ENTITY key pair is added to the preset library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_sound_entity_kv(item_key, key, value) end

--The default library adds AUDIO_KEY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_audio_key_kv(item_key, key, value) end

--The default library adds GAME_MODE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_game_mode_kv(item_key, key, value) end

--The default library adds PLAYER key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_player_kv(item_key, key, value) end

--The default library adds a PLAYER_GROUP key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_player_group_kv(item_key, key, value) end

--Add a ROLE_RES_KEY key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_role_res_key_kv(item_key, key, value) end

--The default library adds a ROLE_STATUS key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_role_status_kv(item_key, key, value) end

--The default library adds ROLE_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_role_type_kv(item_key, key, value) end

--The default library adds ROLE_RELATION key and value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_role_relation_kv(item_key, key, value) end

--Default libraries add TEAM key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_team_kv(item_key, key, value) end

--The default library adds a POINT key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_point_kv(item_key, key, value) end

--The default library adds VECTOR3 key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_vector3_kv(item_key, key, value) end

--Add ROTATION key pairs to default libraries
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_rotation_kv(item_key, key, value) end

--The default library adds POINT_LIST key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_point_list_kv(item_key, key, value) end

--The default library adds a RECTANGLE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_rectangle_kv(item_key, key, value) end

--The default library adds ROUND_AREA key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_round_area_kv(item_key, key, value) end

--The default library adds POLYGON key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_polygon_kv(item_key, key, value) end

--The default library adds a CAMERA key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_camera_kv(item_key, key, value) end

--The default library adds CAMLINE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_camline_kv(item_key, key, value) end

--The default library adds POINT_LIGHT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_point_light_kv(item_key, key, value) end

--The default library adds SPOT_LIGHT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_spot_light_kv(item_key, key, value) end

--The default library adds FOG key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_fog_kv(item_key, key, value) end

--Add a SCENE_SOUND key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_scene_sound_kv(item_key, key, value) end

--The default library adds MODEL key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_model_kv(item_key, key, value) end

--Add SFX_ENTITY key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_sfx_entity_kv(item_key, key, value) end

--The default library adds SFX_KEY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_sfx_key_kv(item_key, key, value) end

--Add a LINK_SFX_ENTITY key pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_link_sfx_entity_kv(item_key, key, value) end

--Default libraries add LINK_SFX_KEY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_link_sfx_key_kv(item_key, key, value) end

--The default library adds a CURSOR_KEY key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_cursor_key_kv(item_key, key, value) end

--The default library adds ANGLE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_angle_kv(item_key, key, value) end

--The default library adds TEXTURE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_texture_kv(item_key, key, value) end

--Add SEQUENCE key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_sequence_kv(item_key, key, value) end

--Add PHYSICS_OBJECT key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_physics_object_kv(item_key, key, value) end

--Add PHYSICS_ENTITY key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_physics_entity_kv(item_key, key, value) end

--Add PHYSICS_OBJECT_KEY key pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_physics_object_key_kv(item_key, key, value) end

--Add a PHYSICS_ENTITY_KEY key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_physics_entity_key_kv(item_key, key, value) end

--The default library adds RIGID_BODY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_rigid_body_kv(item_key, key, value) end

--The default library adds RIGID_BODY_GROUP key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_rigid_body_group_kv(item_key, key, value) end

--The default library adds COLLIDER key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_collider_kv(item_key, key, value) end

--Default libraries add JOINT key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_joint_kv(item_key, key, value) end

--The default library adds a REACTION key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_reaction_kv(item_key, key, value) end

--Add a REACTION_GROUP key value pair to the preset library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_reaction_group_kv(item_key, key, value) end

--The default library adds DYNAMIC_TRIGGER_INSTANCE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_dynamic_trigger_instance_kv(item_key, key, value) end

--The default library adds TABLE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_table_kv(item_key, key, value) end

--Add a RANDOM_POOL key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_random_pool_kv(item_key, key, value) end

--Add a SCENE_UI key-value pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_scene_ui_kv(item_key, key, value) end

--The default library adds a DAMAGE_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_damage_type_kv(item_key, key, value) end

--The default library adds a HARM_TEXT_TYPE_NEW key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_harm_text_type_new_kv(item_key, key, value) end

--The default library adds a FONT_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_font_type_kv(item_key, key, value) end

--The default library adds JUMP_WORD_TRACK key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_jump_word_track_kv(item_key, key, value) end

--The default library adds a NEW_TIMER key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_new_timer_kv(item_key, key, value) end

--The default library adds a TECH_KEY key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_tech_key_kv(item_key, key, value) end

--Add STORE_KEY key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_store_key_kv(item_key, key, value) end

--Add a KEYBOARD_KEY pair to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_keyboard_key_kv(item_key, key, value) end

--Add FUNC_KEYBOARD_KEY key pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_func_keyboard_key_kv(item_key, key, value) end

--The default library adds MOUSE_KEY key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_mouse_key_kv(item_key, key, value) end

--The default library adds MOUSE_WHEEL key pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_mouse_wheel_kv(item_key, key, value) end

--The default library adds a POST_EFFECT key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_post_effect_kv(item_key, key, value) end

--The default library adds a UNIT_TYPE key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_unit_type_kv(item_key, key, value) end

--The default library adds UNIT_COMMAND_TYPE key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_unit_command_type_kv(item_key, key, value) end

--Add MINI_MAP_COLOR_TYPE key-value pairs to the default library
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_mini_map_color_type_kv(item_key, key, value) end

--The default library adds a UNIT_BEHAVIOR key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_unit_behavior_kv(item_key, key, value) end

--The default library adds a CURVED_PATH key-value pair
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_curved_path_kv(item_key, key, value) end

--The default library adds CURVED_PATH_3D key-value pairs
---@param item_key integer # prefab Library ID
---@param key integer # ID
---@param value string # Key-value name
function GameAPI.set_ability_key_curved_path_3d_kv(item_key, key, value) end

--Determines if the BUFF is an instance of the target BUFFID
---@param modifier1 py.ModifierEntity # BUFF instance
---@param modifier_key py.ModifierKey # BUFFID
---@return boolean # Whether it is an instance of target buff
function GameAPI.is_modifier_id(modifier1, modifier_key) end

--Determine if the BUFF is the target BUFF instance
---@param modifier1 py.ModifierEntity # BUFF instance
---@param modifier2 py.ModifierEntity # BUFF instance
---@return boolean # Target instance or not
function GameAPI.is_modifier_instance(modifier1, modifier2) end

--Determine if the BUFF is a target type buff(positive or negative, etc.)
---@param modifier1 py.ModifierEntity # BUFF instance
---@param modifier_type py.ModifierEffectType # BUFF effect type
---@return boolean # Whether it is the target effect type
function GameAPI.judge_modifier_effect_type(modifier1, modifier_type) end

--Gets the effect type of the target effect (BUFF)
---@param modifier1 py.ModifierEntity # BUFF instance
---@return py.ModifierKey # Effect number
function GameAPI.get_type_of_modifier_entity(modifier1) end

--Convert the target number ID to the effect type
---@param modifier_key integer # Numerical numbering
---@return py.ModifierKey # Effect number
function GameAPI.transfer_num_into_modifier_key(modifier_key) end

--Gets the name of the magic effect type
---@param modifier_key py.ModifierKey # Magic effect number
---@return string # name
function GameAPI.api_get_name_of_modifier_key(modifier_key) end

--Create a new magic effect compilation
---@param old_entity_no py.ModifierKey # Magic effects stuff
---@return py.ModifierKey # Magic effects stuff
function GameAPI.create_modifier_editor_data(old_entity_no) end

--Units of recent synthetic items
---@return py.Unit # Unit entity
function GameAPI.get_last_compose_unit() end

--Recently added items
---@return py.Item # Object entity
function GameAPI.get_last_add_item() end

--Recently removed items
---@return py.Item # Object entity
function GameAPI.get_last_remove_item() end

--Recently used item
---@return py.Item # Object entity
function GameAPI.get_last_use_item() end

--Recently stacked changed items
---@return py.Item # Object entity
function GameAPI.get_last_stack_changed_item() end

--Recently charged items changed
---@return py.Item # Object entity
function GameAPI.get_last_charge_changed_item() end

--Recently added item units
---@return py.Unit # Unit entity
function GameAPI.get_last_add_item_unit() end

--Recently removed item unit
---@return py.Unit # Unit entity
function GameAPI.get_last_remove_item_unit() end

--Recently used item unit
---@return py.Unit # Unit entity
function GameAPI.get_last_use_item_unit() end

--The unit of recent item level change
---@return py.Unit # Unit entity
function GameAPI.get_last_change_item_stack_unit() end

--Gets additional properties for the item type
---@param item_key py.ItemKey # Item type number
---@param attr_element_field string # Attribute name
---@param attr_key string # Attribute component name
function GameAPI.api_get_attr_of_item_key(item_key, attr_element_field, attr_key) end

--Gets a model of the item type
---@param item_key py.ItemKey # Item type number
---@return py.ModelKey # Model number
function GameAPI.api_get_item_type_model(item_key) end

--Iterate over the number of item types required for item type synthesis
---@param item_key py.ItemKey # Item type number
---@param comp_item_key py.ItemKey # Item type number
---@return integer # number
function GameAPI.api_get_value_of_item_name_comp_mat(item_key, comp_item_key) end

--Traverse the number of player attributes required for item type synthesis
---@param item_key py.ItemKey # Item type number
---@param role_res_key py.RoleResKey # Player attributes
---@return number # value
function GameAPI.api_get_value_of_item_name_comp_res(item_key, role_res_key) end

--Create a new item widget
---@param old_entity_no py.ItemKey # Article knitting
---@return py.ItemKey # Article knitting
function GameAPI.create_item_editor_data(old_entity_no) end

--Get the resources needed to purchase an item type
---@param item_no py.ItemKey # Article knitting
---@param role_res_key py.RoleResKey # Player attributes
---@return py.Fixed # Resource quantity
function GameAPI.api_get_item_key_res_cnt(item_no, role_res_key) end

--Gets the real attribute of an item type
---@param item_no py.ItemKey # Catalogue number
---@param attr_key string # Item type Real attribute key
---@return py.Fixed # Real attribute value
function GameAPI.api_get_item_type_float_attr(item_no, attr_key) end

--Gets the integer properties of the item type
---@param item_no py.ItemKey # Catalogue number
---@param attr_key string # Item integer property key
---@return integer # Integer attribute value
function GameAPI.api_get_item_type_int_attr(item_no, attr_key) end

--Add an item to the item group
---@param item_group py.Item # item
---@param item py.ItemGroup # Item group
function GameAPI.api_add_item_to_group(item_group, item) end

--Delete an item from an item group
---@param item_group py.ItemGroup # Item group
---@param item py.Item # item
function GameAPI.api_remove_item_in_group(item_group, item) end

--Determine if the item is in the item group
---@param item py.Item # item
---@param item_group py.ItemGroup # Item group
---@return boolean # Whether it is in the item group
function GameAPI.api_judge_item_in_group(item, item_group) end

--A random unit in the item group
---@param item_group py.ItemGroup # Item group
---@return py.Item # item
function GameAPI.api_get_random_item_in_item_group(item_group) end

--Recently purchased items
---@return py.Item # Object entity
function GameAPI.get_last_buy_shop_item() end

--Recently sold items
---@return py.Item # Object entity
function GameAPI.get_last_sell_shop_item() end

--Recent purchaser
---@return py.Unit # Unit entity
function GameAPI.get_last_buyer_unit() end

--Recent seller
---@return py.Unit # Unit entity
function GameAPI.get_last_seller_unit() end

--Recently purchased unit
---@return py.Unit # Unit entity
function GameAPI.get_last_buy_shop_unit() end

--Recently upgraded technology
---@return py.TechKey # Technology number
function GameAPI.get_last_upgraded_tech() end

--Latest lift technology
---@return py.TechKey # Technology number
function GameAPI.get_last_operated_tech() end

--Recent changes Technology
---@return py.TechKey # Technology number
function GameAPI.get_last_changed_tech() end

--Recent changes in technology level
---@return integer # Degree of technological change
function GameAPI.get_last_changed_tech_level() end

--Recent acquisition of technology
---@return py.TechKey # Technology number
function GameAPI.get_last_added_tech() end

--Recently lost technology
---@return py.TechKey # Technology number
function GameAPI.get_last_removed_tech() end

--Recently studied science and technology unit
---@return py.Unit # Research and technological unit
function GameAPI.get_last_upgrade_tech_unit() end

--Recently acquired technology unit
---@return py.Unit # Acquisition of scientific and technological units
function GameAPI.get_last_add_tech_unit() end

--Recently lost his tech unit
---@return py.Unit # Loss of technology unit
function GameAPI.get_last_remove_tech_unit() end

--Get the technology level name
---@param tech_no py.TechKey # Technology number
---@param level integer # Lv.
---@return string # Name
function GameAPI.get_tech_name(tech_no, level) end

--Get the tech level icon
---@param tech_no py.TechKey # Technology number
---@param level integer # Lv.
---@return integer # Picture id
function GameAPI.get_tech_icon(tech_no, level) end

--The cost of acquiring a technology equivalent level
---@param tech_no py.TechKey # Technology number
---@param level integer # Lv.
---@return integer # Picture id
function GameAPI.get_tech_cost(tech_no, level) end

--Get the maximum level of technology
---@param tech_no py.TechKey # Technology number
---@return integer # Technical maximum level
function GameAPI.get_tech_max_level(tech_no) end

--Create new technology articles
---@param old_entity_no py.TechKey # Science and technology articles
---@return py.TechKey # Science and technology articles
function GameAPI.create_technology_editor_data(old_entity_no) end

--Players who have recently successfully used paid items
---@return py.Role # Player
function GameAPI.get_last_use_store_item_role() end

--Sets the return value of the function
function GameAPI.set_function_return() end

--Gets the function return value
---@param func_id string # Function ID
---@param actor py.Actor # caller
---@param context py.Dict # context
---@param params_expr py.List # Parameter list
---@param call_rt_idx integer # Return value Index
---@return py.DynamicTypeMeta # A return value
function GameAPI.get_function_return_value(func_id, actor, context, params_expr, call_rt_idx) end

--Send custom events
---@param event_id integer # Event ID
---@param params_dict py.Dict # Parameter dictionary
function GameAPI.send_event_custom(event_id, params_dict) end

--Generated dictionary
---@param ori_dict py.Dict # dictionary
---@param key string # Parameter key
---@param param string # Parameter value
---@return py.Dict # Dictionary return value
function GameAPI.gen_param_dict(ori_dict, key, param) end

--Gets the value in the dictionary
---@param params_dict py.Dict # dictionary
---@param key string # Parameter key
---@return py.DynamicTypeMeta # Dictionary value
function GameAPI.get_custom_param(params_dict, key) end

--Execute the Lua code
---@param code string # Character string
---@param arg1? string # Parameter 1
---@param arg2? string # Parameter 2
---@param arg3? string # Parameter 3
---@param arg4? string # Parameter 4
---@param arg5? string # Parameter 5
function GameAPI.eval_lua_code(code, arg1, arg2, arg3, arg4, arg5) end

--Delete the unit motor
---@param unit py.Unit # unit
function GameAPI.remove_unit_mover(unit) end

--Interrupt the unit motor
---@param unit py.Unit # unit
function GameAPI.break_unit_mover(unit) end

--Motor collision unit
---@return py.Unit # Unit entity
function GameAPI.get_mover_collide_unit() end

--Create a tracker
---@param unit py.Unit # unit
---@param target_unit py.Unit # Target unit
---@param stop_distance_to_target number # Stopping distance
---@param init_velocity number # Initial velocity
---@param acceleration number # acceleration
---@param max_velocity? number # Maximum speed
---@param min_velocity? number # Minimum speed
---@param init_height? number # Initial height
---@param parabola_height? number # Height of parabola
---@param bind_point? string # Attachment point
---@param collision_type? integer # Collision type
---@param collision_radius? number # Collision range
---@param is_face_angle? boolean # Whether to always face the direction of motion
---@param is_multi_collision? boolean # Whether you can collide with the same object multiple times
---@param terrain_block? boolean # Topographic barrier
---@param priority? integer # Priority series
---@param is_absolute_height? boolean # Use absolute height
---@param f_mover_finish? function # Motion completion event
---@param f_mover_interrupt? function # Motion interruption event
---@param f_mover_removed? function # Motion removal event
---@param f_terrain_collide? function # Terrain collision event
---@param f_unit_collide? function # Unit collision event
---@return py.Mover # Sports device ID
function GameAPI.create_chasing_mover(unit, target_unit, stop_distance_to_target, init_velocity, acceleration, max_velocity, min_velocity, init_height, parabola_height, bind_point, collision_type, collision_radius, is_face_angle, is_multi_collision, terrain_block, priority, is_absolute_height, f_mover_finish, f_mover_interrupt, f_mover_removed, f_terrain_collide, f_unit_collide) end

--Create a linear motion device
---@param unit py.Unit # unit
---@param angle number # Direction of motion
---@param max_dist number # Maximum distance
---@param init_velocity number # Initial velocity
---@param acceleration number # acceleration
---@param max_velocity? number # Maximum speed
---@param min_velocity? number # Minimum speed
---@param init_height? number # Initial height
---@param fin_height? number # Terminal height
---@param parabola_height? number # Height of parabola
---@param collision_type? integer # Collision type
---@param collision_radius? number # Collision range
---@param is_face_angle? boolean # Whether to always face the direction of motion
---@param is_multi_collision? boolean # Whether you can collide with the same object multiple times
---@param terrain_block? boolean # Topographic barrier
---@param priority? integer # Priority series
---@param is_absolute_height? boolean # Use absolute height
---@param f_mover_finish? function # Motion completion event
---@param f_mover_interrupt? function # Motion interruption event
---@param f_mover_removed? function # Motion removal event
---@param f_terrain_collide? function # Terrain collision event
---@param f_unit_collide? function # Unit collision event
---@return py.Mover # Sports device ID
function GameAPI.create_straight_mover(unit, angle, max_dist, init_velocity, acceleration, max_velocity, min_velocity, init_height, fin_height, parabola_height, collision_type, collision_radius, is_face_angle, is_multi_collision, terrain_block, priority, is_absolute_height, f_mover_finish, f_mover_interrupt, f_mover_removed, f_terrain_collide, f_unit_collide) end

--Create a surround motion
---@param unit py.Unit # unit
---@param target_unit py.Unit # Target unit
---@param circle_radius number # Circular radius
---@param angle_velocity number # Angular velocity
---@param init_angle? number # Initial Angle
---@param counterclockwise? number # direction
---@param round_time? number # Circling time
---@param centrifugal_velocity? number # Centrifugal velocity
---@param lifting_velocity? number # Lifting speed
---@param init_height? number # Circling height
---@param collision_type? integer # Collision type
---@param collision_radius? number # Collision range
---@param is_face_angle? boolean # Whether to always face the direction of motion
---@param is_multi_collision? boolean # Whether you can collide with the same object multiple times
---@param terrain_block? boolean # Topographic barrier
---@param priority? integer # Priority series
---@param is_absolute_height? boolean # Use absolute height
---@param target_pos? py.Vector3 # Target coordinate
---@param f_mover_finish? function # Motion completion event
---@param f_mover_interrupt? function # Motion interruption event
---@param f_mover_removed? function # Motion removal event
---@param f_terrain_collide? function # Terrain collision event
---@param f_unit_collide? function # Unit collision event
---@return py.Mover # Sports device ID
function GameAPI.create_round_mover(unit, target_unit, circle_radius, angle_velocity, init_angle, counterclockwise, round_time, centrifugal_velocity, lifting_velocity, init_height, collision_type, collision_radius, is_face_angle, is_multi_collision, terrain_block, priority, is_absolute_height, target_pos, f_mover_finish, f_mover_interrupt, f_mover_removed, f_terrain_collide, f_unit_collide) end

--Create a curve mover
---@param unit py.Unit # unit
---@param angle number # Direction of motion
---@param max_dist number # Maximum distance
---@param init_velocity number # Initial velocity
---@param acceleration number # acceleration
---@param max_velocity? number # Maximum speed
---@param min_velocity? number # Minimum speed
---@param init_height? number # Initial height
---@param fin_height? number # Terminal height
---@param collision_type? integer # Collision type
---@param collision_radius? number # Collision range
---@param is_face_angle? boolean # Whether to always face the direction of motion
---@param is_multi_collision? boolean # Whether you can collide with the same object multiple times
---@param terrain_block? boolean # Topographic barrier
---@param priority? integer # Priority series
---@param is_absolute_height? boolean # Use absolute height
---@param path? py.CurvedPath # path
---@param f_mover_finish? function # Motion completion event
---@param f_mover_interrupt? function # Motion interruption event
---@param f_mover_removed? function # Motion removal event
---@param f_terrain_collide? function # Terrain collision event
---@param f_unit_collide? function # Unit collision event
---@return py.Mover # Sports device ID
function GameAPI.create_curved_mover(unit, angle, max_dist, init_velocity, acceleration, max_velocity, min_velocity, init_height, fin_height, collision_type, collision_radius, is_face_angle, is_multi_collision, terrain_block, priority, is_absolute_height, path, f_mover_finish, f_mover_interrupt, f_mover_removed, f_terrain_collide, f_unit_collide) end

--Get the motor type
---@param mover_id py.Mover # Kinetoscope
---@return integer # Motor type
function GameAPI.get_mover_type(mover_id) end

--Erasing motor
---@param mover_id py.Mover # Kinetoscope
function GameAPI.remove_mover(mover_id) end

--interrupter
---@param mover_id py.Mover # Kinetoscope
function GameAPI.break_mover(mover_id) end

--Get the unit of motion
---@param unit py.Unit # unit
---@return py.Mover # Kinetoscope
function GameAPI.get_unit_mover(unit) end

--Gets the priority of the exerciser
---@param mover_id py.Mover # Kinetoscope
---@return integer # priority
function GameAPI.get_mover_priority(mover_id) end

--Set the priority of the exerciser
---@param mover_id py.Mover # Kinetoscope
---@param priority integer # priority
function GameAPI.set_mover_priority(mover_id, priority) end

--Set the properties of the motion device
---@param mover_id py.Mover # Kinetoscope
---@param key integer # Attribute name
---@param value py.Fixed # Attribute value
function GameAPI.set_mover_property(mover_id, key, value) end

--Gets the properties of the motion device
---@param mover_id py.Mover # Kinetoscope
---@param key integer # Attribute name
---@return py.Fixed # Attribute value
function GameAPI.get_mover_property(mover_id, key) end

--Obtain the motion direction of the motor
---@param mover_id py.Mover # Kinetoscope
---@return py.Fixed # Angle
function GameAPI.get_mover_angle(mover_id) end

--Set the motion direction of the motor
---@param mover_id py.Mover # Kinetoscope
---@param angle py.Fixed # direction
function GameAPI.set_mover_angle(mover_id, angle) end

--Set the collision range of the motor
---@param mover_id py.Mover # Kinetoscope
---@param radius py.Fixed # Collision range
function GameAPI.set_mover_collision_radius(mover_id, radius) end

--Get the collision range of the motor
---@param mover_id py.Mover # Kinetoscope
---@return py.Fixed # Collision range
function GameAPI.get_mover_collision_radius(mover_id) end

--Set the associated unit of the motor
---@param mover_id py.Mover # Kinetoscope
---@param unit py.Unit # Associated unit
function GameAPI.set_mover_relate_unit(mover_id, unit) end

--Get the associated unit of the motor
---@param mover_id py.Mover # Kinetoscope
---@return py.Unit # Associated unit
function GameAPI.get_mover_relate_unit(mover_id) end

--Set the associated skills of the motor
---@param mover_id py.Mover # Kinetoscope
---@param ability py.Ability # Relevance skill
function GameAPI.set_mover_relate_ability(mover_id, ability) end

--Gain motor association skills
---@param mover_id py.Mover # Kinetoscope
---@return py.Ability # Relevance skill
function GameAPI.get_mover_relate_ability(mover_id) end

--Move
---@param pos py.FVector3 # position
---@param nav_range? py.Fixed # Pathfinding range
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_move_to_pos(pos, nav_range) end

--stop
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_stop() end

--Null status
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_empty() end

--garrison
---@param pos py.FVector3 # position
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_hold(pos) end

--Attack movement
---@param pos py.FVector3 # position
---@param nav_range? py.Fixed # Pathfinding range
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_attack_move(pos, nav_range) end

--Attack
---@param target py.Actor # goal
---@param nav_range? py.Fixed # Pathfinding range
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_attack_target(target, nav_range) end

--Path movement
---@param road py.Road # path
---@param patrol_mode integer # Moving mode
---@param can_attack boolean # Active attack or not
---@param start_from_nearest? boolean # Whether to start nearby
---@param back_to_nearest? boolean # Whether to return nearby
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_move_along_road(road, patrol_mode, can_attack, start_from_nearest, back_to_nearest) end

--Release skill
---@param ability py.Ability # skill
---@param tar_point_1? py.Point # Release point 1
---@param tar_point_2? py.Point # Release point 2
---@param tar_unit? py.Unit # Release target unit
---@param tar_item? py.Item # Release target item
---@param tar_dest? py.Destructible # Target destructible
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_use_skill(ability, tar_point_1, tar_point_2, tar_unit, tar_item, tar_dest) end

--Use goods
---@param item py.Item # item
---@param tar_point_1? py.Point # Release point 1
---@param tar_point_2? py.Point # Release point 2
---@param tar_unit? py.Unit # Target unit
---@param tar_item? py.Item # Target item
---@param tar_dest? py.Destructible # Target destructible
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_use_item(item, tar_point_1, tar_point_2, tar_unit, tar_item, tar_dest) end

--Pick up goods
---@param item py.Item # item
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_pick_item(item) end

--discard
---@param item py.Item # item
---@param pos py.FVector3 # position
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_drop_item(item, pos) end

--Transfer goods
---@param item py.Item # item
---@param target py.Unit # object
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_transfer_item(item, target) end

--Follow
---@param target py.Unit # goal
---@param refresh_interval? py.Fixed # interval
---@param near_offset? py.Fixed # Following distance
---@param far_offset? py.Fixed # Refollowing distance
---@param follow_angle? py.Fixed # Following Angle
---@param follow_dead_target? boolean # Follow the death target
---@return py.UnitCommand # Unit command
function GameAPI.create_unit_command_follow(target, refresh_interval, near_offset, far_offset, follow_angle, follow_dead_target) end

--Gets the Magic effect special effect number UI_ANIM_PLAY_MODE key-value pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_modifier_key_ui_anim_play_mode_kv(modifier_key, key) end

--Gets the effect number UI_ANIM_PLAY_MODE key-value pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_projectile_key_ui_anim_play_mode_kv(projectile_key, key) end

--Gets the destructible number UI_ANIM_PLAY_MODE key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_destructible_key_ui_anim_play_mode_kv(destructible_key, key) end

--Gets the technology number UI_ANIM_PLAY_MODE key-value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_tech_key_ui_anim_play_mode_kv(tech_key, key) end

--Gets the image UI_ANIM_PLAY_MODE key-value pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_icon_id_ui_anim_play_mode_kv(icon_id, key) end

--Gets the logical physical component type UI_ANIM_PLAY_MODE key-value pair
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_physics_entity_key_ui_anim_play_mode_kv(physics_entity_key, key) end

--Gets a UI_ANIM_PLAY_MODE key-value pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_kv_pair_value_ui_anim_play_mode(kvbase, key) end

--Gets the unit number UI_TEXT_FONT_NAME key-value pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return string # Key value
function GameAPI.get_unit_key_ui_text_font_name_kv(unit_key, key) end

--Gets the item number UI_TEXT_FONT_NAME key-value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return string # Key value
function GameAPI.get_item_key_ui_text_font_name_kv(item_key, key) end

--Gets the skill number UI_TEXT_FONT_NAME key-value pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return string # Key value
function GameAPI.get_ability_key_ui_text_font_name_kv(ability_key, key) end

--Gets the Magic effect number UI_TEXT_FONT_NAME key-value pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return string # Key value
function GameAPI.get_modifier_key_ui_text_font_name_kv(modifier_key, key) end

--Gets the special effect number UI_TEXT_FONT_NAME key-value pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return string # Key value
function GameAPI.get_projectile_key_ui_text_font_name_kv(projectile_key, key) end

--Gets destructible number UI_TEXT_FONT_NAME key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return string # Key value
function GameAPI.get_destructible_key_ui_text_font_name_kv(destructible_key, key) end

--Gets the technology number UI_TEXT_FONT_NAME key-value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return string # Key value
function GameAPI.get_tech_key_ui_text_font_name_kv(tech_key, key) end

--Gets the image UI_TEXT_FONT_NAME key-value pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return string # Key value
function GameAPI.get_icon_id_ui_text_font_name_kv(icon_id, key) end

--Gets the logical physical component type UI_TEXT_FONT_NAME key-value pair
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return string # Key value
function GameAPI.get_physics_entity_key_ui_text_font_name_kv(physics_entity_key, key) end

--Gets a UI_TEXT_FONT_NAME key-value pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return string # Key value
function GameAPI.get_kv_pair_value_ui_text_font_name(kvbase, key) end

--Gets the unit number UI_ECA_ANIM_TYPE key-value pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_unit_key_ui_eca_anim_type_kv(unit_key, key) end

--Gets the item number UI_ECA_ANIM_TYPE key-value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_item_key_ui_eca_anim_type_kv(item_key, key) end

--Gets the skill number UI_ECA_ANIM_TYPE key-value pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_ability_key_ui_eca_anim_type_kv(ability_key, key) end

--Gets the Magic effect special effect number UI_ECA_ANIM_TYPE key-value pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_modifier_key_ui_eca_anim_type_kv(modifier_key, key) end

--Gets the special effect number UI_ECA_ANIM_TYPE key-value pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_projectile_key_ui_eca_anim_type_kv(projectile_key, key) end

--Gets the destructible number UI_ECA_ANIM_TYPE key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_destructible_key_ui_eca_anim_type_kv(destructible_key, key) end

--Gets the technology number UI_ECA_ANIM_TYPE key-value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_tech_key_ui_eca_anim_type_kv(tech_key, key) end

--Gets the image UI_ECA_ANIM_TYPE key-value pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_icon_id_ui_eca_anim_type_kv(icon_id, key) end

--Gets the logical physical component type UI_ECA_ANIM_TYPE key-value pair
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_physics_entity_key_ui_eca_anim_type_kv(physics_entity_key, key) end

--Gets a UI_ECA_ANIM_TYPE key-value pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_kv_pair_value_ui_eca_anim_type(kvbase, key) end

--Gets the LOCAL_UNIT_GROUP key-value pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.LocalUnitGroup # Key value
function GameAPI.get_unit_key_local_unit_group_kv(unit_key, key) end

--Gets the item number LOCAL_UNIT_GROUP key-value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return py.LocalUnitGroup # Key value
function GameAPI.get_item_key_local_unit_group_kv(item_key, key) end

--Obtain the skill number LOCAL_UNIT_GROUP key and value pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return py.LocalUnitGroup # Key value
function GameAPI.get_ability_key_local_unit_group_kv(ability_key, key) end

--Gets Magic effect number LOCAL_UNIT_GROUP key pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return py.LocalUnitGroup # Key value
function GameAPI.get_modifier_key_local_unit_group_kv(modifier_key, key) end

--Gets the special effect number LOCAL_UNIT_GROUP key-value pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return py.LocalUnitGroup # Key value
function GameAPI.get_projectile_key_local_unit_group_kv(projectile_key, key) end

--Gets the destructible number LOCAL_UNIT_GROUP key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return py.LocalUnitGroup # Key value
function GameAPI.get_destructible_key_local_unit_group_kv(destructible_key, key) end

--Gets the technology number LOCAL_UNIT_GROUP key-value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return py.LocalUnitGroup # Key value
function GameAPI.get_tech_key_local_unit_group_kv(tech_key, key) end

--Gets the LOCAL_UNIT_GROUP key-value pair for the picture
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return py.LocalUnitGroup # Key value
function GameAPI.get_icon_id_local_unit_group_kv(icon_id, key) end

--Obtain the LOCAL_UNIT_GROUP key pair of the logical physical component type
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return py.LocalUnitGroup # Key value
function GameAPI.get_physics_entity_key_local_unit_group_kv(physics_entity_key, key) end

--Gets the LOCAL_UNIT_GROUP key-value pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return py.LocalUnitGroup # Key value
function GameAPI.get_kv_pair_value_local_unit_group(kvbase, key) end

--Get the unit number DAMAGE_ATTACK_TYPE key-value pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_unit_key_damage_attack_type_kv(unit_key, key) end

--Gets the item number DAMAGE_ATTACK_TYPE key-value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_item_key_damage_attack_type_kv(item_key, key) end

--Obtain the skill number DAMAGE_ATTACK_TYPE key-value pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_ability_key_damage_attack_type_kv(ability_key, key) end

--Gets the Magic effect number DAMAGE_ATTACK_TYPE key-value pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_modifier_key_damage_attack_type_kv(modifier_key, key) end

--Get the special effect number DAMAGE_ATTACK_TYPE key-value pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_projectile_key_damage_attack_type_kv(projectile_key, key) end

--Gets the destructible number DAMAGE_ATTACK_TYPE key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_destructible_key_damage_attack_type_kv(destructible_key, key) end

--Get the technology number DAMAGE_ATTACK_TYPE key-value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_tech_key_damage_attack_type_kv(tech_key, key) end

--Obtain the image DAMAGE_ATTACK_TYPE key-value pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_icon_id_damage_attack_type_kv(icon_id, key) end

--Obtain the logical physical component type DAMAGE_ATTACK_TYPE key and value pair
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_physics_entity_key_damage_attack_type_kv(physics_entity_key, key) end

--Gets the DAMAGE_ATTACK_TYPE key-value pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_kv_pair_value_damage_attack_type(kvbase, key) end

--Gets the unit number DAMAGE_ARMOR_TYPE key-value pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_unit_key_damage_armor_type_kv(unit_key, key) end

--Gets the item number DAMAGE_ARMOR_TYPE key-value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_item_key_damage_armor_type_kv(item_key, key) end

--Gets the skill number DAMAGE_ARMOR_TYPE key-value pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_ability_key_damage_armor_type_kv(ability_key, key) end

--Get Magic effect number DAMAGE_ARMOR_TYPE key-value pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_modifier_key_damage_armor_type_kv(modifier_key, key) end

--Gets the special effect number DAMAGE_ARMOR_TYPE key-value pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_projectile_key_damage_armor_type_kv(projectile_key, key) end

--Gets the destructible number DAMAGE_ARMOR_TYPE key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_destructible_key_damage_armor_type_kv(destructible_key, key) end

--Gets the technology number DAMAGE_ARMOR_TYPE key-value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_tech_key_damage_armor_type_kv(tech_key, key) end

--Get the image DAMAGE_ARMOR_TYPE key-value pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_icon_id_damage_armor_type_kv(icon_id, key) end

--Obtain the logical physical component type DAMAGE_ARMOR_TYPE key-value pair
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_physics_entity_key_damage_armor_type_kv(physics_entity_key, key) end

--Gets the DAMAGE_ARMOR_TYPE key-value pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return integer # Key value
function GameAPI.get_kv_pair_value_damage_armor_type(kvbase, key) end

--Gets the ITEM_STACK_TYPE key-value pair with the unit number
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.ItemStackType # Key value
function GameAPI.get_unit_key_item_stack_type_kv(unit_key, key) end

--Gets the item number ITEM_STACK_TYPE key-value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return py.ItemStackType # Key value
function GameAPI.get_item_key_item_stack_type_kv(item_key, key) end

--Gets the skill number ITEM_STACK_TYPE key-value pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return py.ItemStackType # Key value
function GameAPI.get_ability_key_item_stack_type_kv(ability_key, key) end

--Gets the magic effect number ITEM_STACK_TYPE key-value pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return py.ItemStackType # Key value
function GameAPI.get_modifier_key_item_stack_type_kv(modifier_key, key) end

--Gets the special effect number ITEM_STACK_TYPE key-value pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return py.ItemStackType # Key value
function GameAPI.get_projectile_key_item_stack_type_kv(projectile_key, key) end

--Gets the destructible number ITEM_STACK_TYPE key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return py.ItemStackType # Key value
function GameAPI.get_destructible_key_item_stack_type_kv(destructible_key, key) end

--Gets the technology number ITEM_STACK_TYPE key-value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return py.ItemStackType # Key value
function GameAPI.get_tech_key_item_stack_type_kv(tech_key, key) end

--Gets the ITEM_STACK_TYPE key-value pair for the picture
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return py.ItemStackType # Key value
function GameAPI.get_icon_id_item_stack_type_kv(icon_id, key) end

--Gets a key-value pair of the logical physical component type ITEM_STACK_TYPE
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return py.ItemStackType # Key value
function GameAPI.get_physics_entity_key_item_stack_type_kv(physics_entity_key, key) end

--Gets the ITEM_STACK_TYPE key-value pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return py.ItemStackType # Key value
function GameAPI.get_kv_pair_value_item_stack_type(kvbase, key) end

--Obtain a key pair with the unit number ABILITY_RELEASE_ID
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.AbilityReleaseId # Key value
function GameAPI.get_unit_key_ability_release_id_kv(unit_key, key) end

--Gets the item number ABILITY_RELEASE_ID key value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return py.AbilityReleaseId # Key value
function GameAPI.get_item_key_ability_release_id_kv(item_key, key) end

--Obtain the skill key pair ABILITY_RELEASE_ID
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return py.AbilityReleaseId # Key value
function GameAPI.get_ability_key_ability_release_id_kv(ability_key, key) end

--Gets the Magic effect number ABILITY_RELEASE_ID key pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return py.AbilityReleaseId # Key value
function GameAPI.get_modifier_key_ability_release_id_kv(modifier_key, key) end

--Get the special effect number ABILITY_RELEASE_ID key pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return py.AbilityReleaseId # Key value
function GameAPI.get_projectile_key_ability_release_id_kv(projectile_key, key) end

--Gets the destructible number ABILITY_RELEASE_ID key value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return py.AbilityReleaseId # Key value
function GameAPI.get_destructible_key_ability_release_id_kv(destructible_key, key) end

--Obtain the technology number ABILITY_RELEASE_ID key pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return py.AbilityReleaseId # Key value
function GameAPI.get_tech_key_ability_release_id_kv(tech_key, key) end

--Gets the image ABILITY_RELEASE_ID key pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return py.AbilityReleaseId # Key value
function GameAPI.get_icon_id_ability_release_id_kv(icon_id, key) end

--Obtain a key pair of the logical physical component type ABILITY_RELEASE_ID
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return py.AbilityReleaseId # Key value
function GameAPI.get_physics_entity_key_ability_release_id_kv(physics_entity_key, key) end

--Obtain the ABILITY_RELEASE_ID key pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return py.AbilityReleaseId # Key value
function GameAPI.get_kv_pair_value_ability_release_id(kvbase, key) end

--Obtain the SLOT_TYPE key pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.SlotType # Key value
function GameAPI.get_unit_key_slot_type_kv(unit_key, key) end

--Gets item number SLOT_TYPE key pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return py.SlotType # Key value
function GameAPI.get_item_key_slot_type_kv(item_key, key) end

--Obtain the skill number SLOT_TYPE key pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return py.SlotType # Key value
function GameAPI.get_ability_key_slot_type_kv(ability_key, key) end

--Gets the Magic effect number SLOT_TYPE key pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return py.SlotType # Key value
function GameAPI.get_modifier_key_slot_type_kv(modifier_key, key) end

--Gets the special effect number SLOT_TYPE key pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return py.SlotType # Key value
function GameAPI.get_projectile_key_slot_type_kv(projectile_key, key) end

--Gets the destructible number SLOT_TYPE key pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return py.SlotType # Key value
function GameAPI.get_destructible_key_slot_type_kv(destructible_key, key) end

--Obtain the technology SLOT_TYPE key pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return py.SlotType # Key value
function GameAPI.get_tech_key_slot_type_kv(tech_key, key) end

--Gets the image SLOT_TYPE key pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return py.SlotType # Key value
function GameAPI.get_icon_id_slot_type_kv(icon_id, key) end

--Obtain the SLOT_TYPE key pair of the logical physical component type
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return py.SlotType # Key value
function GameAPI.get_physics_entity_key_slot_type_kv(physics_entity_key, key) end

--Gets the SLOT_TYPE key pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return py.SlotType # Key value
function GameAPI.get_kv_pair_value_slot_type(kvbase, key) end

--Gets the unit number UI_POINT key-value pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.FUIPoint # Key value
function GameAPI.get_unit_key_ui_point_kv(unit_key, key) end

--Gets the item number UI_POINT key-value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return py.FUIPoint # Key value
function GameAPI.get_item_key_ui_point_kv(item_key, key) end

--Gets the skill number UI_POINT key-value pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return py.FUIPoint # Key value
function GameAPI.get_ability_key_ui_point_kv(ability_key, key) end

--Gets the Magic effect special effect number UI_POINT key-value pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return py.FUIPoint # Key value
function GameAPI.get_modifier_key_ui_point_kv(modifier_key, key) end

--Gets the effect number UI_POINT key-value pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return py.FUIPoint # Key value
function GameAPI.get_projectile_key_ui_point_kv(projectile_key, key) end

--Gets destructible number UI_POINT key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return py.FUIPoint # Key value
function GameAPI.get_destructible_key_ui_point_kv(destructible_key, key) end

--Gets the technology number UI_POINT key-value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return py.FUIPoint # Key value
function GameAPI.get_tech_key_ui_point_kv(tech_key, key) end

--Gets the image UI_POINT key-value pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return py.FUIPoint # Key value
function GameAPI.get_icon_id_ui_point_kv(icon_id, key) end

--Gets a logical physical component type UI_POINT key-value pair
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return py.FUIPoint # Key value
function GameAPI.get_physics_entity_key_ui_point_kv(physics_entity_key, key) end

--Gets a UI_POINT key-value pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return py.FUIPoint # Key value
function GameAPI.get_kv_pair_value_ui_point(kvbase, key) end

--Get the unit number ATTACH_MODEL_ENTITY key and value pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.AttachModelEntity # Key value
function GameAPI.get_unit_key_attach_model_entity_kv(unit_key, key) end

--Gets the item number ATTACH_MODEL_ENTITY key value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return py.AttachModelEntity # Key value
function GameAPI.get_item_key_attach_model_entity_kv(item_key, key) end

--Get the skill number ATTACH_MODEL_ENTITY key value pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return py.AttachModelEntity # Key value
function GameAPI.get_ability_key_attach_model_entity_kv(ability_key, key) end

--Gets magic effects special effect number ATTACH_MODEL_ENTITY key value pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return py.AttachModelEntity # Key value
function GameAPI.get_modifier_key_attach_model_entity_kv(modifier_key, key) end

--Gets the special effect number ATTACH_MODEL_ENTITY key value pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return py.AttachModelEntity # Key value
function GameAPI.get_projectile_key_attach_model_entity_kv(projectile_key, key) end

--Gets the destructible number ATTACH_MODEL_ENTITY key value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return py.AttachModelEntity # Key value
function GameAPI.get_destructible_key_attach_model_entity_kv(destructible_key, key) end

--Get the technology number ATTACH_MODEL_ENTITY key and value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return py.AttachModelEntity # Key value
function GameAPI.get_tech_key_attach_model_entity_kv(tech_key, key) end

--Get the image ATTACH_MODEL_ENTITY key and value pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return py.AttachModelEntity # Key value
function GameAPI.get_icon_id_attach_model_entity_kv(icon_id, key) end

--Gets the logical physical component type ATTACH_MODEL_ENTITY key value pair
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return py.AttachModelEntity # Key value
function GameAPI.get_physics_entity_key_attach_model_entity_kv(physics_entity_key, key) end

--Get the ATTACH_MODEL_ENTITY key and value pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return py.AttachModelEntity # Key value
function GameAPI.get_kv_pair_value_attach_model_entity(kvbase, key) end

--Gets the unit number LIVE2D key-value pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.Live2dKey # Key value
function GameAPI.get_unit_key_live2d_kv(unit_key, key) end

--Get item number LIVE2D key value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return py.Live2dKey # Key value
function GameAPI.get_item_key_live2d_kv(item_key, key) end

--Get skill number LIVE2D key value pairs
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return py.Live2dKey # Key value
function GameAPI.get_ability_key_live2d_kv(ability_key, key) end

--Get Magic Effects number LIVE2D key pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return py.Live2dKey # Key value
function GameAPI.get_modifier_key_live2d_kv(modifier_key, key) end

--Get the LIVE2D key-value pair with the effect number
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return py.Live2dKey # Key value
function GameAPI.get_projectile_key_live2d_kv(projectile_key, key) end

--Gets the destructible number LIVE2D key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return py.Live2dKey # Key value
function GameAPI.get_destructible_key_live2d_kv(destructible_key, key) end

--Get Tech number LIVE2D key value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return py.Live2dKey # Key value
function GameAPI.get_tech_key_live2d_kv(tech_key, key) end

--Get the image LIVE2D key-value pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return py.Live2dKey # Key value
function GameAPI.get_icon_id_live2d_kv(icon_id, key) end

--Gets the logical physical component type LIVE2D key-value pair
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return py.Live2dKey # Key value
function GameAPI.get_physics_entity_key_live2d_kv(physics_entity_key, key) end

--Get LIVE2D key-value pairs
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return py.Live2dKey # Key value
function GameAPI.get_kv_pair_value_live2d(kvbase, key) end

--Gets the unit number SPINE key pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.Spine # Key value
function GameAPI.get_unit_key_spine_kv(unit_key, key) end

--Gets the item number SPINE key value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return py.Spine # Key value
function GameAPI.get_item_key_spine_kv(item_key, key) end

--Gets the skill number SPINE key pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return py.Spine # Key value
function GameAPI.get_ability_key_spine_kv(ability_key, key) end

--Gets the SPINE key pair for the Magic effects number
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return py.Spine # Key value
function GameAPI.get_modifier_key_spine_kv(modifier_key, key) end

--Gets the special effect number SPINE key pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return py.Spine # Key value
function GameAPI.get_projectile_key_spine_kv(projectile_key, key) end

--Gets the destructible number SPINE key pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return py.Spine # Key value
function GameAPI.get_destructible_key_spine_kv(destructible_key, key) end

--Gets the technology number SPINE key pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return py.Spine # Key value
function GameAPI.get_tech_key_spine_kv(tech_key, key) end

--Gets the image SPINE key pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return py.Spine # Key value
function GameAPI.get_icon_id_spine_kv(icon_id, key) end

--Gets the SPINE key pair of the logical physical component type
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return py.Spine # Key value
function GameAPI.get_physics_entity_key_spine_kv(physics_entity_key, key) end

--Gets the SPINE key pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return py.Spine # Key value
function GameAPI.get_kv_pair_value_spine(kvbase, key) end

--Obtain the unit number FORCE_ENTITY key pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.Force # Key value
function GameAPI.get_unit_key_force_entity_kv(unit_key, key) end

--Gets the item number FORCE_ENTITY key-value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return py.Force # Key value
function GameAPI.get_item_key_force_entity_kv(item_key, key) end

--Obtain the skill number FORCE_ENTITY key pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return py.Force # Key value
function GameAPI.get_ability_key_force_entity_kv(ability_key, key) end

--Gets a magic effect number FORCE_ENTITY key pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return py.Force # Key value
function GameAPI.get_modifier_key_force_entity_kv(modifier_key, key) end

--Gets the special effect number FORCE_ENTITY key-value pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return py.Force # Key value
function GameAPI.get_projectile_key_force_entity_kv(projectile_key, key) end

--Gets the destructible number FORCE_ENTITY key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return py.Force # Key value
function GameAPI.get_destructible_key_force_entity_kv(destructible_key, key) end

--Obtain the technology number FORCE_ENTITY key pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return py.Force # Key value
function GameAPI.get_tech_key_force_entity_kv(tech_key, key) end

--Get an image FORCE_ENTITY key pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return py.Force # Key value
function GameAPI.get_icon_id_force_entity_kv(icon_id, key) end

--Gets the FORCE_ENTITY key value pair of the logical physical component type
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return py.Force # Key value
function GameAPI.get_physics_entity_key_force_entity_kv(physics_entity_key, key) end

--Get the FORCE_ENTITY key pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return py.Force # Key value
function GameAPI.get_kv_pair_value_force_entity(kvbase, key) end

--Gets the unit number GOODS_KEY key-value pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.GoodsKey # Key value
function GameAPI.get_unit_key_goods_key_kv(unit_key, key) end

--Gets the item number GOODS_KEY key-value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return py.GoodsKey # Key value
function GameAPI.get_item_key_goods_key_kv(item_key, key) end

--Get the skill number GOODS_KEY key pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return py.GoodsKey # Key value
function GameAPI.get_ability_key_goods_key_kv(ability_key, key) end

--Get the Magic effect number GOODS_KEY key pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return py.GoodsKey # Key value
function GameAPI.get_modifier_key_goods_key_kv(modifier_key, key) end

--Get the special effect number GOODS_KEY key-value pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return py.GoodsKey # Key value
function GameAPI.get_projectile_key_goods_key_kv(projectile_key, key) end

--Gets the destructible number GOODS_KEY key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return py.GoodsKey # Key value
function GameAPI.get_destructible_key_goods_key_kv(destructible_key, key) end

--Gets the technology number GOODS_KEY key-value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return py.GoodsKey # Key value
function GameAPI.get_tech_key_goods_key_kv(tech_key, key) end

--Get the image GOODS_KEY key-value pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return py.GoodsKey # Key value
function GameAPI.get_icon_id_goods_key_kv(icon_id, key) end

--Gets the logical physical component type GOODS_KEY key-value pair
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return py.GoodsKey # Key value
function GameAPI.get_physics_entity_key_goods_key_kv(physics_entity_key, key) end

--Gets the GOODS_KEY key-value pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return py.GoodsKey # Key value
function GameAPI.get_kv_pair_value_goods_key(kvbase, key) end

--Gets the MOUSE_KEY_WITHOUT_MIDDLE key-value pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.MouseKeyWithoutMiddle # Key value
function GameAPI.get_unit_key_mouse_key_without_middle_kv(unit_key, key) end

--Gets the item number MOUSE_KEY_WITHOUT_MIDDLE key-value pair
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return py.MouseKeyWithoutMiddle # Key value
function GameAPI.get_item_key_mouse_key_without_middle_kv(item_key, key) end

--Gets the skill number MOUSE_KEY_WITHOUT_MIDDLE key-value pair
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return py.MouseKeyWithoutMiddle # Key value
function GameAPI.get_ability_key_mouse_key_without_middle_kv(ability_key, key) end

--Gets the Magic effect number MOUSE_KEY_WITHOUT_MIDDLE key-value pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return py.MouseKeyWithoutMiddle # Key value
function GameAPI.get_modifier_key_mouse_key_without_middle_kv(modifier_key, key) end

--Gets the MOUSE_KEY_WITHOUT_MIDDLE key-value pair for the special effect number
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return py.MouseKeyWithoutMiddle # Key value
function GameAPI.get_projectile_key_mouse_key_without_middle_kv(projectile_key, key) end

--Gets the destructible number MOUSE_KEY_WITHOUT_MIDDLE key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return py.MouseKeyWithoutMiddle # Key value
function GameAPI.get_destructible_key_mouse_key_without_middle_kv(destructible_key, key) end

--Gets the technology number MOUSE_KEY_WITHOUT_MIDDLE key-value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return py.MouseKeyWithoutMiddle # Key value
function GameAPI.get_tech_key_mouse_key_without_middle_kv(tech_key, key) end

--Gets the image MOUSE_KEY_WITHOUT_MIDDLE key-value pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return py.MouseKeyWithoutMiddle # Key value
function GameAPI.get_icon_id_mouse_key_without_middle_kv(icon_id, key) end

--Gets the MOUSE_KEY_WITHOUT_MIDDLE key and value pair of the logical physical component type
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return py.MouseKeyWithoutMiddle # Key value
function GameAPI.get_physics_entity_key_mouse_key_without_middle_kv(physics_entity_key, key) end

--Gets the MOUSE_KEY_WITHOUT_MIDDLE key-value pair
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return py.MouseKeyWithoutMiddle # Key value
function GameAPI.get_kv_pair_value_mouse_key_without_middle(kvbase, key) end

--Gets the unit number MAP key-value pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.Map # Key value
function GameAPI.get_unit_key_map_kv(unit_key, key) end

--Gets item number MAP key-value pairs
---@param item_key py.ItemKey # Item number
---@param key string # Key name
---@return py.Map # Key value
function GameAPI.get_item_key_map_kv(item_key, key) end

--Get skill number MAP key-value pairs
---@param ability_key py.AbilityKey # Skill number
---@param key string # Key name
---@return py.Map # Key value
function GameAPI.get_ability_key_map_kv(ability_key, key) end

--Get the Magic effect number MAP key pair
---@param modifier_key py.ModifierKey # Magic effect number
---@param key string # Key name
---@return py.Map # Key value
function GameAPI.get_modifier_key_map_kv(modifier_key, key) end

--Gets the special effect number MAP key-value pair
---@param projectile_key py.ProjectileKey # Special effect number
---@param key string # Key name
---@return py.Map # Key value
function GameAPI.get_projectile_key_map_kv(projectile_key, key) end

--Gets the destructible number MAP key-value pair
---@param destructible_key py.DestructibleKey # Destructible number
---@param key string # Key name
---@return py.Map # Key value
function GameAPI.get_destructible_key_map_kv(destructible_key, key) end

--Gets the technology number MAP key-value pair
---@param tech_key py.TechKey # Technology number
---@param key string # Key name
---@return py.Map # Key value
function GameAPI.get_tech_key_map_kv(tech_key, key) end

--Gets the image MAP key-value pair
---@param icon_id py.Texture # picture
---@param key string # Key name
---@return py.Map # Key value
function GameAPI.get_icon_id_map_kv(icon_id, key) end

--Obtain the MAP key pair of the logical physical component type
---@param physics_entity_key py.PhysicsEntityKey # Logical physical component type
---@param key string # Key name
---@return py.Map # Key value
function GameAPI.get_physics_entity_key_map_kv(physics_entity_key, key) end

--Get MAP key-value pairs
---@param kvbase py.KVBase # Custom key value carrier
---@param key string # Key name
---@return py.Map # Key value
function GameAPI.get_kv_pair_value_map(kvbase, key) end

--Gets the UNIT_GROUP_COMMAND_TYPE key-value pair
---@param unit_key py.UnitKey # Unit number
---@param key string # Key name
---@return py.UnitGroupCommandType # Key value
function GameAPI.get_unit_key_unit_group_command_type_kv(unit_key, key) end
